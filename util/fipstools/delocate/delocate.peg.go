// Code generated by /home/dpitt/src/peg/peg delocate.peg. DO NOT EDIT.

package main

import (
	"bytes"
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleAsmFile
	ruleStatement
	ruleGlobalDirective
	ruleDirective
	ruleDirectiveName
	ruleLocationDirective
	ruleFileDirective
	ruleLocDirective
	ruleArgs
	ruleArg
	ruleQuotedArg
	ruleQuotedText
	ruleLabelContainingDirective
	ruleLabelContainingDirectiveName
	ruleSymbolArgs
	ruleSymbolArg
	ruleSymbolExpr
	ruleSymbolAtom
	ruleSymbolOperator
	ruleOpenParen
	ruleCloseParen
	ruleSymbolType
	ruleDot
	ruleTCMarker
	ruleEscapedChar
	ruleWS
	ruleComment
	ruleLabel
	ruleSymbolName
	ruleLocalSymbol
	ruleLocalLabel
	ruleLocalLabelRef
	ruleInstruction
	ruleInstructionName
	ruleInstructionArg
	ruleGOTLocation
	ruleGOTSymbolOffset
	ruleAVX512Token
	ruleTOCRefHigh
	ruleTOCRefLow
	ruleIndirectionIndicator
	ruleRegisterOrConstant
	ruleARMConstantTweak
	ruleARMRegister
	ruleARMVectorRegister
	ruleMemoryRef
	ruleSymbolRef
	ruleLow12BitsSymbolRef
	ruleARMBaseIndexScale
	ruleARMGOTLow12
	ruleARMPostincrement
	ruleBaseIndexScale
	ruleOperator
	ruleOffsetOperator
	ruleOffset
	ruleSection
	ruleSegmentRegister
)

var rul3s = [...]string{
	"Unknown",
	"AsmFile",
	"Statement",
	"GlobalDirective",
	"Directive",
	"DirectiveName",
	"LocationDirective",
	"FileDirective",
	"LocDirective",
	"Args",
	"Arg",
	"QuotedArg",
	"QuotedText",
	"LabelContainingDirective",
	"LabelContainingDirectiveName",
	"SymbolArgs",
	"SymbolArg",
	"SymbolExpr",
	"SymbolAtom",
	"SymbolOperator",
	"OpenParen",
	"CloseParen",
	"SymbolType",
	"Dot",
	"TCMarker",
	"EscapedChar",
	"WS",
	"Comment",
	"Label",
	"SymbolName",
	"LocalSymbol",
	"LocalLabel",
	"LocalLabelRef",
	"Instruction",
	"InstructionName",
	"InstructionArg",
	"GOTLocation",
	"GOTSymbolOffset",
	"AVX512Token",
	"TOCRefHigh",
	"TOCRefLow",
	"IndirectionIndicator",
	"RegisterOrConstant",
	"ARMConstantTweak",
	"ARMRegister",
	"ARMVectorRegister",
	"MemoryRef",
	"SymbolRef",
	"Low12BitsSymbolRef",
	"ARMBaseIndexScale",
	"ARMGOTLow12",
	"ARMPostincrement",
	"BaseIndexScale",
	"Operator",
	"OffsetOperator",
	"Offset",
	"Section",
	"SegmentRegister",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Asm struct {
	Buffer         string
	buffer         []rune
	rules          [58]func() bool
	parse          func(rule ...int) error
	reset          func()
	Pretty         bool
	disableMemoize bool
	tokens32
}

func (p *Asm) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Asm) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Asm
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Asm) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Asm) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *Asm) SprintSyntaxTree() string {
	var b bytes.Buffer
	p.WriteSyntaxTree(&b)
	return b.String()
}

func Pretty(pretty bool) func(*Asm) error {
	return func(p *Asm) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Asm) error {
	return func(p *Asm) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}

func DisableMemoize() func(*Asm) error {
	return func(p *Asm) error {
		p.disableMemoize = true
		return nil
	}
}

type memo struct {
	Matched bool
	Partial []token32
}

type memoKey struct {
	Rule     uint32
	Position uint32
}

func (p *Asm) Init(options ...func(*Asm) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
		memoization          map[memoKey]memo
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0
		memoization = make(map[memoKey]memo)
		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	memoize := func(rule uint32, begin uint32, tokenIndexStart uint32, matched bool) {
		if p.disableMemoize {
			return
		}
		key := memoKey{rule, begin}
		if !matched {
			memoization[key] = memo{Matched: false}
		} else {
			t := tree.tree[tokenIndexStart:tokenIndex]
			tokenCopy := make([]token32, len(t))
			copy(tokenCopy, t)
			memoization[key] = memo{Matched: true, Partial: tokenCopy}
		}
	}

	memoizedResult := func(m memo) bool {
		if !m.Matched {
			return false
		}
		tree.tree = append(tree.tree[:tokenIndex], m.Partial...)
		tokenIndex += uint32(len(m.Partial))
		position = m.Partial[len(m.Partial)-1].end
		if tree.tree[tokenIndex-1].begin != position && position > max.end {
			max = tree.tree[tokenIndex-1]
		}
		return true
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 AsmFile <- <(Statement* !.)> */
		func() bool {
			if memoized, ok := memoization[memoKey{0, position}]; ok {
				return memoizedResult(memoized)
			}
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
			l2:
				{
					position3, tokenIndex3 := position, tokenIndex
					if !_rules[ruleStatement]() {
						goto l3
					}
					goto l2
				l3:
					position, tokenIndex = position3, tokenIndex3
				}
				{
					position4, tokenIndex4 := position, tokenIndex
					if !matchDot() {
						goto l4
					}
					goto l0
				l4:
					position, tokenIndex = position4, tokenIndex4
				}
				add(ruleAsmFile, position1)
			}
			memoize(0, position0, tokenIndex0, true)
			return true
		l0:
			memoize(0, position0, tokenIndex0, false)
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Statement <- <(WS? (Label / ((GlobalDirective / LocationDirective / LabelContainingDirective / Instruction / Directive / Comment / ) WS? ((Comment? '\n') / ';'))))> */
		func() bool {
			if memoized, ok := memoization[memoKey{1, position}]; ok {
				return memoizedResult(memoized)
			}
			position5, tokenIndex5 := position, tokenIndex
			{
				position6 := position
				{
					position7, tokenIndex7 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l7
					}
					goto l8
				l7:
					position, tokenIndex = position7, tokenIndex7
				}
			l8:
				{
					position9, tokenIndex9 := position, tokenIndex
					if !_rules[ruleLabel]() {
						goto l10
					}
					goto l9
				l10:
					position, tokenIndex = position9, tokenIndex9
					{
						position11, tokenIndex11 := position, tokenIndex
						if !_rules[ruleGlobalDirective]() {
							goto l12
						}
						goto l11
					l12:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleLocationDirective]() {
							goto l13
						}
						goto l11
					l13:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleLabelContainingDirective]() {
							goto l14
						}
						goto l11
					l14:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleInstruction]() {
							goto l15
						}
						goto l11
					l15:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleDirective]() {
							goto l16
						}
						goto l11
					l16:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleComment]() {
							goto l17
						}
						goto l11
					l17:
						position, tokenIndex = position11, tokenIndex11
					}
				l11:
					{
						position18, tokenIndex18 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l18
						}
						goto l19
					l18:
						position, tokenIndex = position18, tokenIndex18
					}
				l19:
					{
						position20, tokenIndex20 := position, tokenIndex
						{
							position22, tokenIndex22 := position, tokenIndex
							if !_rules[ruleComment]() {
								goto l22
							}
							goto l23
						l22:
							position, tokenIndex = position22, tokenIndex22
						}
					l23:
						if buffer[position] != rune('\n') {
							goto l21
						}
						position++
						goto l20
					l21:
						position, tokenIndex = position20, tokenIndex20
						if buffer[position] != rune(';') {
							goto l5
						}
						position++
					}
				l20:
				}
			l9:
				add(ruleStatement, position6)
			}
			memoize(1, position5, tokenIndex5, true)
			return true
		l5:
			memoize(1, position5, tokenIndex5, false)
			position, tokenIndex = position5, tokenIndex5
			return false
		},
		/* 2 GlobalDirective <- <((('.' ('g' / 'G') ('l' / 'L') ('o' / 'O') ('b' / 'B') ('a' / 'A') ('l' / 'L')) / ('.' ('g' / 'G') ('l' / 'L') ('o' / 'O') ('b' / 'B') ('l' / 'L'))) WS SymbolName)> */
		func() bool {
			if memoized, ok := memoization[memoKey{2, position}]; ok {
				return memoizedResult(memoized)
			}
			position24, tokenIndex24 := position, tokenIndex
			{
				position25 := position
				{
					position26, tokenIndex26 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l27
					}
					position++
					{
						position28, tokenIndex28 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l29
						}
						position++
						goto l28
					l29:
						position, tokenIndex = position28, tokenIndex28
						if buffer[position] != rune('G') {
							goto l27
						}
						position++
					}
				l28:
					{
						position30, tokenIndex30 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l31
						}
						position++
						goto l30
					l31:
						position, tokenIndex = position30, tokenIndex30
						if buffer[position] != rune('L') {
							goto l27
						}
						position++
					}
				l30:
					{
						position32, tokenIndex32 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l33
						}
						position++
						goto l32
					l33:
						position, tokenIndex = position32, tokenIndex32
						if buffer[position] != rune('O') {
							goto l27
						}
						position++
					}
				l32:
					{
						position34, tokenIndex34 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l35
						}
						position++
						goto l34
					l35:
						position, tokenIndex = position34, tokenIndex34
						if buffer[position] != rune('B') {
							goto l27
						}
						position++
					}
				l34:
					{
						position36, tokenIndex36 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l37
						}
						position++
						goto l36
					l37:
						position, tokenIndex = position36, tokenIndex36
						if buffer[position] != rune('A') {
							goto l27
						}
						position++
					}
				l36:
					{
						position38, tokenIndex38 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l39
						}
						position++
						goto l38
					l39:
						position, tokenIndex = position38, tokenIndex38
						if buffer[position] != rune('L') {
							goto l27
						}
						position++
					}
				l38:
					goto l26
				l27:
					position, tokenIndex = position26, tokenIndex26
					if buffer[position] != rune('.') {
						goto l24
					}
					position++
					{
						position40, tokenIndex40 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l41
						}
						position++
						goto l40
					l41:
						position, tokenIndex = position40, tokenIndex40
						if buffer[position] != rune('G') {
							goto l24
						}
						position++
					}
				l40:
					{
						position42, tokenIndex42 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l43
						}
						position++
						goto l42
					l43:
						position, tokenIndex = position42, tokenIndex42
						if buffer[position] != rune('L') {
							goto l24
						}
						position++
					}
				l42:
					{
						position44, tokenIndex44 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l45
						}
						position++
						goto l44
					l45:
						position, tokenIndex = position44, tokenIndex44
						if buffer[position] != rune('O') {
							goto l24
						}
						position++
					}
				l44:
					{
						position46, tokenIndex46 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l47
						}
						position++
						goto l46
					l47:
						position, tokenIndex = position46, tokenIndex46
						if buffer[position] != rune('B') {
							goto l24
						}
						position++
					}
				l46:
					{
						position48, tokenIndex48 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l49
						}
						position++
						goto l48
					l49:
						position, tokenIndex = position48, tokenIndex48
						if buffer[position] != rune('L') {
							goto l24
						}
						position++
					}
				l48:
				}
			l26:
				if !_rules[ruleWS]() {
					goto l24
				}
				if !_rules[ruleSymbolName]() {
					goto l24
				}
				add(ruleGlobalDirective, position25)
			}
			memoize(2, position24, tokenIndex24, true)
			return true
		l24:
			memoize(2, position24, tokenIndex24, false)
			position, tokenIndex = position24, tokenIndex24
			return false
		},
		/* 3 Directive <- <('.' DirectiveName (WS Args)?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{3, position}]; ok {
				return memoizedResult(memoized)
			}
			position50, tokenIndex50 := position, tokenIndex
			{
				position51 := position
				if buffer[position] != rune('.') {
					goto l50
				}
				position++
				if !_rules[ruleDirectiveName]() {
					goto l50
				}
				{
					position52, tokenIndex52 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l52
					}
					if !_rules[ruleArgs]() {
						goto l52
					}
					goto l53
				l52:
					position, tokenIndex = position52, tokenIndex52
				}
			l53:
				add(ruleDirective, position51)
			}
			memoize(3, position50, tokenIndex50, true)
			return true
		l50:
			memoize(3, position50, tokenIndex50, false)
			position, tokenIndex = position50, tokenIndex50
			return false
		},
		/* 4 DirectiveName <- <([a-z] / [A-Z] / ([0-9] / [0-9]) / '_')+> */
		func() bool {
			if memoized, ok := memoization[memoKey{4, position}]; ok {
				return memoizedResult(memoized)
			}
			position54, tokenIndex54 := position, tokenIndex
			{
				position55 := position
				{
					position58, tokenIndex58 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l59
					}
					position++
					goto l58
				l59:
					position, tokenIndex = position58, tokenIndex58
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l60
					}
					position++
					goto l58
				l60:
					position, tokenIndex = position58, tokenIndex58
					{
						position62, tokenIndex62 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l63
						}
						position++
						goto l62
					l63:
						position, tokenIndex = position62, tokenIndex62
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l61
						}
						position++
					}
				l62:
					goto l58
				l61:
					position, tokenIndex = position58, tokenIndex58
					if buffer[position] != rune('_') {
						goto l54
					}
					position++
				}
			l58:
			l56:
				{
					position57, tokenIndex57 := position, tokenIndex
					{
						position64, tokenIndex64 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l65
						}
						position++
						goto l64
					l65:
						position, tokenIndex = position64, tokenIndex64
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l66
						}
						position++
						goto l64
					l66:
						position, tokenIndex = position64, tokenIndex64
						{
							position68, tokenIndex68 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l69
							}
							position++
							goto l68
						l69:
							position, tokenIndex = position68, tokenIndex68
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l67
							}
							position++
						}
					l68:
						goto l64
					l67:
						position, tokenIndex = position64, tokenIndex64
						if buffer[position] != rune('_') {
							goto l57
						}
						position++
					}
				l64:
					goto l56
				l57:
					position, tokenIndex = position57, tokenIndex57
				}
				add(ruleDirectiveName, position55)
			}
			memoize(4, position54, tokenIndex54, true)
			return true
		l54:
			memoize(4, position54, tokenIndex54, false)
			position, tokenIndex = position54, tokenIndex54
			return false
		},
		/* 5 LocationDirective <- <(FileDirective / LocDirective)> */
		func() bool {
			if memoized, ok := memoization[memoKey{5, position}]; ok {
				return memoizedResult(memoized)
			}
			position70, tokenIndex70 := position, tokenIndex
			{
				position71 := position
				{
					position72, tokenIndex72 := position, tokenIndex
					if !_rules[ruleFileDirective]() {
						goto l73
					}
					goto l72
				l73:
					position, tokenIndex = position72, tokenIndex72
					if !_rules[ruleLocDirective]() {
						goto l70
					}
				}
			l72:
				add(ruleLocationDirective, position71)
			}
			memoize(5, position70, tokenIndex70, true)
			return true
		l70:
			memoize(5, position70, tokenIndex70, false)
			position, tokenIndex = position70, tokenIndex70
			return false
		},
		/* 6 FileDirective <- <('.' ('f' / 'F') ('i' / 'I') ('l' / 'L') ('e' / 'E') WS (!('#' / '\n') .)+)> */
		func() bool {
			if memoized, ok := memoization[memoKey{6, position}]; ok {
				return memoizedResult(memoized)
			}
			position74, tokenIndex74 := position, tokenIndex
			{
				position75 := position
				if buffer[position] != rune('.') {
					goto l74
				}
				position++
				{
					position76, tokenIndex76 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l77
					}
					position++
					goto l76
				l77:
					position, tokenIndex = position76, tokenIndex76
					if buffer[position] != rune('F') {
						goto l74
					}
					position++
				}
			l76:
				{
					position78, tokenIndex78 := position, tokenIndex
					if buffer[position] != rune('i') {
						goto l79
					}
					position++
					goto l78
				l79:
					position, tokenIndex = position78, tokenIndex78
					if buffer[position] != rune('I') {
						goto l74
					}
					position++
				}
			l78:
				{
					position80, tokenIndex80 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l81
					}
					position++
					goto l80
				l81:
					position, tokenIndex = position80, tokenIndex80
					if buffer[position] != rune('L') {
						goto l74
					}
					position++
				}
			l80:
				{
					position82, tokenIndex82 := position, tokenIndex
					if buffer[position] != rune('e') {
						goto l83
					}
					position++
					goto l82
				l83:
					position, tokenIndex = position82, tokenIndex82
					if buffer[position] != rune('E') {
						goto l74
					}
					position++
				}
			l82:
				if !_rules[ruleWS]() {
					goto l74
				}
				{
					position86, tokenIndex86 := position, tokenIndex
					{
						position87, tokenIndex87 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l88
						}
						position++
						goto l87
					l88:
						position, tokenIndex = position87, tokenIndex87
						if buffer[position] != rune('\n') {
							goto l86
						}
						position++
					}
				l87:
					goto l74
				l86:
					position, tokenIndex = position86, tokenIndex86
				}
				if !matchDot() {
					goto l74
				}
			l84:
				{
					position85, tokenIndex85 := position, tokenIndex
					{
						position89, tokenIndex89 := position, tokenIndex
						{
							position90, tokenIndex90 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l91
							}
							position++
							goto l90
						l91:
							position, tokenIndex = position90, tokenIndex90
							if buffer[position] != rune('\n') {
								goto l89
							}
							position++
						}
					l90:
						goto l85
					l89:
						position, tokenIndex = position89, tokenIndex89
					}
					if !matchDot() {
						goto l85
					}
					goto l84
				l85:
					position, tokenIndex = position85, tokenIndex85
				}
				add(ruleFileDirective, position75)
			}
			memoize(6, position74, tokenIndex74, true)
			return true
		l74:
			memoize(6, position74, tokenIndex74, false)
			position, tokenIndex = position74, tokenIndex74
			return false
		},
		/* 7 LocDirective <- <('.' ('l' / 'L') ('o' / 'O') ('c' / 'C') WS (!('#' / '/' / '\n') .)+)> */
		func() bool {
			if memoized, ok := memoization[memoKey{7, position}]; ok {
				return memoizedResult(memoized)
			}
			position92, tokenIndex92 := position, tokenIndex
			{
				position93 := position
				if buffer[position] != rune('.') {
					goto l92
				}
				position++
				{
					position94, tokenIndex94 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l95
					}
					position++
					goto l94
				l95:
					position, tokenIndex = position94, tokenIndex94
					if buffer[position] != rune('L') {
						goto l92
					}
					position++
				}
			l94:
				{
					position96, tokenIndex96 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l97
					}
					position++
					goto l96
				l97:
					position, tokenIndex = position96, tokenIndex96
					if buffer[position] != rune('O') {
						goto l92
					}
					position++
				}
			l96:
				{
					position98, tokenIndex98 := position, tokenIndex
					if buffer[position] != rune('c') {
						goto l99
					}
					position++
					goto l98
				l99:
					position, tokenIndex = position98, tokenIndex98
					if buffer[position] != rune('C') {
						goto l92
					}
					position++
				}
			l98:
				if !_rules[ruleWS]() {
					goto l92
				}
				{
					position102, tokenIndex102 := position, tokenIndex
					{
						position103, tokenIndex103 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l104
						}
						position++
						goto l103
					l104:
						position, tokenIndex = position103, tokenIndex103
						if buffer[position] != rune('/') {
							goto l105
						}
						position++
						goto l103
					l105:
						position, tokenIndex = position103, tokenIndex103
						if buffer[position] != rune('\n') {
							goto l102
						}
						position++
					}
				l103:
					goto l92
				l102:
					position, tokenIndex = position102, tokenIndex102
				}
				if !matchDot() {
					goto l92
				}
			l100:
				{
					position101, tokenIndex101 := position, tokenIndex
					{
						position106, tokenIndex106 := position, tokenIndex
						{
							position107, tokenIndex107 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l108
							}
							position++
							goto l107
						l108:
							position, tokenIndex = position107, tokenIndex107
							if buffer[position] != rune('/') {
								goto l109
							}
							position++
							goto l107
						l109:
							position, tokenIndex = position107, tokenIndex107
							if buffer[position] != rune('\n') {
								goto l106
							}
							position++
						}
					l107:
						goto l101
					l106:
						position, tokenIndex = position106, tokenIndex106
					}
					if !matchDot() {
						goto l101
					}
					goto l100
				l101:
					position, tokenIndex = position101, tokenIndex101
				}
				add(ruleLocDirective, position93)
			}
			memoize(7, position92, tokenIndex92, true)
			return true
		l92:
			memoize(7, position92, tokenIndex92, false)
			position, tokenIndex = position92, tokenIndex92
			return false
		},
		/* 8 Args <- <(Arg (WS? ',' WS? Arg)*)> */
		func() bool {
			if memoized, ok := memoization[memoKey{8, position}]; ok {
				return memoizedResult(memoized)
			}
			position110, tokenIndex110 := position, tokenIndex
			{
				position111 := position
				if !_rules[ruleArg]() {
					goto l110
				}
			l112:
				{
					position113, tokenIndex113 := position, tokenIndex
					{
						position114, tokenIndex114 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l114
						}
						goto l115
					l114:
						position, tokenIndex = position114, tokenIndex114
					}
				l115:
					if buffer[position] != rune(',') {
						goto l113
					}
					position++
					{
						position116, tokenIndex116 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l116
						}
						goto l117
					l116:
						position, tokenIndex = position116, tokenIndex116
					}
				l117:
					if !_rules[ruleArg]() {
						goto l113
					}
					goto l112
				l113:
					position, tokenIndex = position113, tokenIndex113
				}
				add(ruleArgs, position111)
			}
			memoize(8, position110, tokenIndex110, true)
			return true
		l110:
			memoize(8, position110, tokenIndex110, false)
			position, tokenIndex = position110, tokenIndex110
			return false
		},
		/* 9 Arg <- <(QuotedArg / ([0-9] / [0-9] / ([a-z] / [A-Z]) / '%' / '+' / '-' / '*' / '_' / '@' / '.')*)> */
		func() bool {
			if memoized, ok := memoization[memoKey{9, position}]; ok {
				return memoizedResult(memoized)
			}
			position118, tokenIndex118 := position, tokenIndex
			{
				position119 := position
				{
					position120, tokenIndex120 := position, tokenIndex
					if !_rules[ruleQuotedArg]() {
						goto l121
					}
					goto l120
				l121:
					position, tokenIndex = position120, tokenIndex120
				l122:
					{
						position123, tokenIndex123 := position, tokenIndex
						{
							position124, tokenIndex124 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l125
							}
							position++
							goto l124
						l125:
							position, tokenIndex = position124, tokenIndex124
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l126
							}
							position++
							goto l124
						l126:
							position, tokenIndex = position124, tokenIndex124
							{
								position128, tokenIndex128 := position, tokenIndex
								if c := buffer[position]; c < rune('a') || c > rune('z') {
									goto l129
								}
								position++
								goto l128
							l129:
								position, tokenIndex = position128, tokenIndex128
								if c := buffer[position]; c < rune('A') || c > rune('Z') {
									goto l127
								}
								position++
							}
						l128:
							goto l124
						l127:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('%') {
								goto l130
							}
							position++
							goto l124
						l130:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('+') {
								goto l131
							}
							position++
							goto l124
						l131:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('-') {
								goto l132
							}
							position++
							goto l124
						l132:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('*') {
								goto l133
							}
							position++
							goto l124
						l133:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('_') {
								goto l134
							}
							position++
							goto l124
						l134:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('@') {
								goto l135
							}
							position++
							goto l124
						l135:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('.') {
								goto l123
							}
							position++
						}
					l124:
						goto l122
					l123:
						position, tokenIndex = position123, tokenIndex123
					}
				}
			l120:
				add(ruleArg, position119)
			}
			memoize(9, position118, tokenIndex118, true)
			return true
		},
		/* 10 QuotedArg <- <('"' QuotedText '"')> */
		func() bool {
			if memoized, ok := memoization[memoKey{10, position}]; ok {
				return memoizedResult(memoized)
			}
			position136, tokenIndex136 := position, tokenIndex
			{
				position137 := position
				if buffer[position] != rune('"') {
					goto l136
				}
				position++
				if !_rules[ruleQuotedText]() {
					goto l136
				}
				if buffer[position] != rune('"') {
					goto l136
				}
				position++
				add(ruleQuotedArg, position137)
			}
			memoize(10, position136, tokenIndex136, true)
			return true
		l136:
			memoize(10, position136, tokenIndex136, false)
			position, tokenIndex = position136, tokenIndex136
			return false
		},
		/* 11 QuotedText <- <(EscapedChar / (!'"' .))*> */
		func() bool {
			if memoized, ok := memoization[memoKey{11, position}]; ok {
				return memoizedResult(memoized)
			}
			position138, tokenIndex138 := position, tokenIndex
			{
				position139 := position
			l140:
				{
					position141, tokenIndex141 := position, tokenIndex
					{
						position142, tokenIndex142 := position, tokenIndex
						if !_rules[ruleEscapedChar]() {
							goto l143
						}
						goto l142
					l143:
						position, tokenIndex = position142, tokenIndex142
						{
							position144, tokenIndex144 := position, tokenIndex
							if buffer[position] != rune('"') {
								goto l144
							}
							position++
							goto l141
						l144:
							position, tokenIndex = position144, tokenIndex144
						}
						if !matchDot() {
							goto l141
						}
					}
				l142:
					goto l140
				l141:
					position, tokenIndex = position141, tokenIndex141
				}
				add(ruleQuotedText, position139)
			}
			memoize(11, position138, tokenIndex138, true)
			return true
		},
		/* 12 LabelContainingDirective <- <(LabelContainingDirectiveName WS SymbolArgs)> */
		func() bool {
			if memoized, ok := memoization[memoKey{12, position}]; ok {
				return memoizedResult(memoized)
			}
			position145, tokenIndex145 := position, tokenIndex
			{
				position146 := position
				if !_rules[ruleLabelContainingDirectiveName]() {
					goto l145
				}
				if !_rules[ruleWS]() {
					goto l145
				}
				if !_rules[ruleSymbolArgs]() {
					goto l145
				}
				add(ruleLabelContainingDirective, position146)
			}
			memoize(12, position145, tokenIndex145, true)
			return true
		l145:
			memoize(12, position145, tokenIndex145, false)
			position, tokenIndex = position145, tokenIndex145
			return false
		},
		/* 13 LabelContainingDirectiveName <- <(('.' ('x' / 'X') ('w' / 'W') ('o' / 'O') ('r' / 'R') ('d' / 'D')) / ('.' ('w' / 'W') ('o' / 'O') ('r' / 'R') ('d' / 'D')) / ('.' ('h' / 'H') ('w' / 'W') ('o' / 'O') ('r' / 'R') ('d' / 'D')) / ('.' ('l' / 'L') ('o' / 'O') ('n' / 'N') ('g' / 'G')) / ('.' ('s' / 'S') ('e' / 'E') ('t' / 'T')) / ('.' ('b' / 'B') ('y' / 'Y') ('t' / 'T') ('e' / 'E')) / ('.' '8' ('b' / 'B') ('y' / 'Y') ('t' / 'T') ('e' / 'E')) / ('.' '4' ('b' / 'B') ('y' / 'Y') ('t' / 'T') ('e' / 'E')) / ('.' ('q' / 'Q') ('u' / 'U') ('a' / 'A') ('d' / 'D')) / ('.' ('t' / 'T') ('c' / 'C')) / ('.' ('l' / 'L') ('o' / 'O') ('c' / 'C') ('a' / 'A') ('l' / 'L') ('e' / 'E') ('n' / 'N') ('t' / 'T') ('r' / 'R') ('y' / 'Y')) / ('.' ('s' / 'S') ('i' / 'I') ('z' / 'Z') ('e' / 'E')) / ('.' ('t' / 'T') ('y' / 'Y') ('p' / 'P') ('e' / 'E')) / ('.' ('u' / 'U') ('l' / 'L') ('e' / 'E') ('b' / 'B') '1' '2' '8') / ('.' ('s' / 'S') ('l' / 'L') ('e' / 'E') ('b' / 'B') '1' '2' '8'))> */
		func() bool {
			if memoized, ok := memoization[memoKey{13, position}]; ok {
				return memoizedResult(memoized)
			}
			position147, tokenIndex147 := position, tokenIndex
			{
				position148 := position
				{
					position149, tokenIndex149 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l150
					}
					position++
					{
						position151, tokenIndex151 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l152
						}
						position++
						goto l151
					l152:
						position, tokenIndex = position151, tokenIndex151
						if buffer[position] != rune('X') {
							goto l150
						}
						position++
					}
				l151:
					{
						position153, tokenIndex153 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l154
						}
						position++
						goto l153
					l154:
						position, tokenIndex = position153, tokenIndex153
						if buffer[position] != rune('W') {
							goto l150
						}
						position++
					}
				l153:
					{
						position155, tokenIndex155 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l156
						}
						position++
						goto l155
					l156:
						position, tokenIndex = position155, tokenIndex155
						if buffer[position] != rune('O') {
							goto l150
						}
						position++
					}
				l155:
					{
						position157, tokenIndex157 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l158
						}
						position++
						goto l157
					l158:
						position, tokenIndex = position157, tokenIndex157
						if buffer[position] != rune('R') {
							goto l150
						}
						position++
					}
				l157:
					{
						position159, tokenIndex159 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l160
						}
						position++
						goto l159
					l160:
						position, tokenIndex = position159, tokenIndex159
						if buffer[position] != rune('D') {
							goto l150
						}
						position++
					}
				l159:
					goto l149
				l150:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l161
					}
					position++
					{
						position162, tokenIndex162 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l163
						}
						position++
						goto l162
					l163:
						position, tokenIndex = position162, tokenIndex162
						if buffer[position] != rune('W') {
							goto l161
						}
						position++
					}
				l162:
					{
						position164, tokenIndex164 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l165
						}
						position++
						goto l164
					l165:
						position, tokenIndex = position164, tokenIndex164
						if buffer[position] != rune('O') {
							goto l161
						}
						position++
					}
				l164:
					{
						position166, tokenIndex166 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l167
						}
						position++
						goto l166
					l167:
						position, tokenIndex = position166, tokenIndex166
						if buffer[position] != rune('R') {
							goto l161
						}
						position++
					}
				l166:
					{
						position168, tokenIndex168 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l169
						}
						position++
						goto l168
					l169:
						position, tokenIndex = position168, tokenIndex168
						if buffer[position] != rune('D') {
							goto l161
						}
						position++
					}
				l168:
					goto l149
				l161:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l170
					}
					position++
					{
						position171, tokenIndex171 := position, tokenIndex
						if buffer[position] != rune('h') {
							goto l172
						}
						position++
						goto l171
					l172:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('H') {
							goto l170
						}
						position++
					}
				l171:
					{
						position173, tokenIndex173 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l174
						}
						position++
						goto l173
					l174:
						position, tokenIndex = position173, tokenIndex173
						if buffer[position] != rune('W') {
							goto l170
						}
						position++
					}
				l173:
					{
						position175, tokenIndex175 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l176
						}
						position++
						goto l175
					l176:
						position, tokenIndex = position175, tokenIndex175
						if buffer[position] != rune('O') {
							goto l170
						}
						position++
					}
				l175:
					{
						position177, tokenIndex177 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l178
						}
						position++
						goto l177
					l178:
						position, tokenIndex = position177, tokenIndex177
						if buffer[position] != rune('R') {
							goto l170
						}
						position++
					}
				l177:
					{
						position179, tokenIndex179 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l180
						}
						position++
						goto l179
					l180:
						position, tokenIndex = position179, tokenIndex179
						if buffer[position] != rune('D') {
							goto l170
						}
						position++
					}
				l179:
					goto l149
				l170:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l181
					}
					position++
					{
						position182, tokenIndex182 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l183
						}
						position++
						goto l182
					l183:
						position, tokenIndex = position182, tokenIndex182
						if buffer[position] != rune('L') {
							goto l181
						}
						position++
					}
				l182:
					{
						position184, tokenIndex184 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l185
						}
						position++
						goto l184
					l185:
						position, tokenIndex = position184, tokenIndex184
						if buffer[position] != rune('O') {
							goto l181
						}
						position++
					}
				l184:
					{
						position186, tokenIndex186 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l187
						}
						position++
						goto l186
					l187:
						position, tokenIndex = position186, tokenIndex186
						if buffer[position] != rune('N') {
							goto l181
						}
						position++
					}
				l186:
					{
						position188, tokenIndex188 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l189
						}
						position++
						goto l188
					l189:
						position, tokenIndex = position188, tokenIndex188
						if buffer[position] != rune('G') {
							goto l181
						}
						position++
					}
				l188:
					goto l149
				l181:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l190
					}
					position++
					{
						position191, tokenIndex191 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l192
						}
						position++
						goto l191
					l192:
						position, tokenIndex = position191, tokenIndex191
						if buffer[position] != rune('S') {
							goto l190
						}
						position++
					}
				l191:
					{
						position193, tokenIndex193 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l194
						}
						position++
						goto l193
					l194:
						position, tokenIndex = position193, tokenIndex193
						if buffer[position] != rune('E') {
							goto l190
						}
						position++
					}
				l193:
					{
						position195, tokenIndex195 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l196
						}
						position++
						goto l195
					l196:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('T') {
							goto l190
						}
						position++
					}
				l195:
					goto l149
				l190:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l197
					}
					position++
					{
						position198, tokenIndex198 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l199
						}
						position++
						goto l198
					l199:
						position, tokenIndex = position198, tokenIndex198
						if buffer[position] != rune('B') {
							goto l197
						}
						position++
					}
				l198:
					{
						position200, tokenIndex200 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l201
						}
						position++
						goto l200
					l201:
						position, tokenIndex = position200, tokenIndex200
						if buffer[position] != rune('Y') {
							goto l197
						}
						position++
					}
				l200:
					{
						position202, tokenIndex202 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l203
						}
						position++
						goto l202
					l203:
						position, tokenIndex = position202, tokenIndex202
						if buffer[position] != rune('T') {
							goto l197
						}
						position++
					}
				l202:
					{
						position204, tokenIndex204 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l205
						}
						position++
						goto l204
					l205:
						position, tokenIndex = position204, tokenIndex204
						if buffer[position] != rune('E') {
							goto l197
						}
						position++
					}
				l204:
					goto l149
				l197:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l206
					}
					position++
					if buffer[position] != rune('8') {
						goto l206
					}
					position++
					{
						position207, tokenIndex207 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l208
						}
						position++
						goto l207
					l208:
						position, tokenIndex = position207, tokenIndex207
						if buffer[position] != rune('B') {
							goto l206
						}
						position++
					}
				l207:
					{
						position209, tokenIndex209 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l210
						}
						position++
						goto l209
					l210:
						position, tokenIndex = position209, tokenIndex209
						if buffer[position] != rune('Y') {
							goto l206
						}
						position++
					}
				l209:
					{
						position211, tokenIndex211 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l212
						}
						position++
						goto l211
					l212:
						position, tokenIndex = position211, tokenIndex211
						if buffer[position] != rune('T') {
							goto l206
						}
						position++
					}
				l211:
					{
						position213, tokenIndex213 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l214
						}
						position++
						goto l213
					l214:
						position, tokenIndex = position213, tokenIndex213
						if buffer[position] != rune('E') {
							goto l206
						}
						position++
					}
				l213:
					goto l149
				l206:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l215
					}
					position++
					if buffer[position] != rune('4') {
						goto l215
					}
					position++
					{
						position216, tokenIndex216 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l217
						}
						position++
						goto l216
					l217:
						position, tokenIndex = position216, tokenIndex216
						if buffer[position] != rune('B') {
							goto l215
						}
						position++
					}
				l216:
					{
						position218, tokenIndex218 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l219
						}
						position++
						goto l218
					l219:
						position, tokenIndex = position218, tokenIndex218
						if buffer[position] != rune('Y') {
							goto l215
						}
						position++
					}
				l218:
					{
						position220, tokenIndex220 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l221
						}
						position++
						goto l220
					l221:
						position, tokenIndex = position220, tokenIndex220
						if buffer[position] != rune('T') {
							goto l215
						}
						position++
					}
				l220:
					{
						position222, tokenIndex222 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l223
						}
						position++
						goto l222
					l223:
						position, tokenIndex = position222, tokenIndex222
						if buffer[position] != rune('E') {
							goto l215
						}
						position++
					}
				l222:
					goto l149
				l215:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l224
					}
					position++
					{
						position225, tokenIndex225 := position, tokenIndex
						if buffer[position] != rune('q') {
							goto l226
						}
						position++
						goto l225
					l226:
						position, tokenIndex = position225, tokenIndex225
						if buffer[position] != rune('Q') {
							goto l224
						}
						position++
					}
				l225:
					{
						position227, tokenIndex227 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l228
						}
						position++
						goto l227
					l228:
						position, tokenIndex = position227, tokenIndex227
						if buffer[position] != rune('U') {
							goto l224
						}
						position++
					}
				l227:
					{
						position229, tokenIndex229 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l230
						}
						position++
						goto l229
					l230:
						position, tokenIndex = position229, tokenIndex229
						if buffer[position] != rune('A') {
							goto l224
						}
						position++
					}
				l229:
					{
						position231, tokenIndex231 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l232
						}
						position++
						goto l231
					l232:
						position, tokenIndex = position231, tokenIndex231
						if buffer[position] != rune('D') {
							goto l224
						}
						position++
					}
				l231:
					goto l149
				l224:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l233
					}
					position++
					{
						position234, tokenIndex234 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l235
						}
						position++
						goto l234
					l235:
						position, tokenIndex = position234, tokenIndex234
						if buffer[position] != rune('T') {
							goto l233
						}
						position++
					}
				l234:
					{
						position236, tokenIndex236 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l237
						}
						position++
						goto l236
					l237:
						position, tokenIndex = position236, tokenIndex236
						if buffer[position] != rune('C') {
							goto l233
						}
						position++
					}
				l236:
					goto l149
				l233:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l238
					}
					position++
					{
						position239, tokenIndex239 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l240
						}
						position++
						goto l239
					l240:
						position, tokenIndex = position239, tokenIndex239
						if buffer[position] != rune('L') {
							goto l238
						}
						position++
					}
				l239:
					{
						position241, tokenIndex241 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l242
						}
						position++
						goto l241
					l242:
						position, tokenIndex = position241, tokenIndex241
						if buffer[position] != rune('O') {
							goto l238
						}
						position++
					}
				l241:
					{
						position243, tokenIndex243 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l244
						}
						position++
						goto l243
					l244:
						position, tokenIndex = position243, tokenIndex243
						if buffer[position] != rune('C') {
							goto l238
						}
						position++
					}
				l243:
					{
						position245, tokenIndex245 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l246
						}
						position++
						goto l245
					l246:
						position, tokenIndex = position245, tokenIndex245
						if buffer[position] != rune('A') {
							goto l238
						}
						position++
					}
				l245:
					{
						position247, tokenIndex247 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l248
						}
						position++
						goto l247
					l248:
						position, tokenIndex = position247, tokenIndex247
						if buffer[position] != rune('L') {
							goto l238
						}
						position++
					}
				l247:
					{
						position249, tokenIndex249 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l250
						}
						position++
						goto l249
					l250:
						position, tokenIndex = position249, tokenIndex249
						if buffer[position] != rune('E') {
							goto l238
						}
						position++
					}
				l249:
					{
						position251, tokenIndex251 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l252
						}
						position++
						goto l251
					l252:
						position, tokenIndex = position251, tokenIndex251
						if buffer[position] != rune('N') {
							goto l238
						}
						position++
					}
				l251:
					{
						position253, tokenIndex253 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l254
						}
						position++
						goto l253
					l254:
						position, tokenIndex = position253, tokenIndex253
						if buffer[position] != rune('T') {
							goto l238
						}
						position++
					}
				l253:
					{
						position255, tokenIndex255 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l256
						}
						position++
						goto l255
					l256:
						position, tokenIndex = position255, tokenIndex255
						if buffer[position] != rune('R') {
							goto l238
						}
						position++
					}
				l255:
					{
						position257, tokenIndex257 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l258
						}
						position++
						goto l257
					l258:
						position, tokenIndex = position257, tokenIndex257
						if buffer[position] != rune('Y') {
							goto l238
						}
						position++
					}
				l257:
					goto l149
				l238:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l259
					}
					position++
					{
						position260, tokenIndex260 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l261
						}
						position++
						goto l260
					l261:
						position, tokenIndex = position260, tokenIndex260
						if buffer[position] != rune('S') {
							goto l259
						}
						position++
					}
				l260:
					{
						position262, tokenIndex262 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l263
						}
						position++
						goto l262
					l263:
						position, tokenIndex = position262, tokenIndex262
						if buffer[position] != rune('I') {
							goto l259
						}
						position++
					}
				l262:
					{
						position264, tokenIndex264 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l265
						}
						position++
						goto l264
					l265:
						position, tokenIndex = position264, tokenIndex264
						if buffer[position] != rune('Z') {
							goto l259
						}
						position++
					}
				l264:
					{
						position266, tokenIndex266 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l267
						}
						position++
						goto l266
					l267:
						position, tokenIndex = position266, tokenIndex266
						if buffer[position] != rune('E') {
							goto l259
						}
						position++
					}
				l266:
					goto l149
				l259:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l268
					}
					position++
					{
						position269, tokenIndex269 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l270
						}
						position++
						goto l269
					l270:
						position, tokenIndex = position269, tokenIndex269
						if buffer[position] != rune('T') {
							goto l268
						}
						position++
					}
				l269:
					{
						position271, tokenIndex271 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l272
						}
						position++
						goto l271
					l272:
						position, tokenIndex = position271, tokenIndex271
						if buffer[position] != rune('Y') {
							goto l268
						}
						position++
					}
				l271:
					{
						position273, tokenIndex273 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l274
						}
						position++
						goto l273
					l274:
						position, tokenIndex = position273, tokenIndex273
						if buffer[position] != rune('P') {
							goto l268
						}
						position++
					}
				l273:
					{
						position275, tokenIndex275 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l276
						}
						position++
						goto l275
					l276:
						position, tokenIndex = position275, tokenIndex275
						if buffer[position] != rune('E') {
							goto l268
						}
						position++
					}
				l275:
					goto l149
				l268:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l277
					}
					position++
					{
						position278, tokenIndex278 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l279
						}
						position++
						goto l278
					l279:
						position, tokenIndex = position278, tokenIndex278
						if buffer[position] != rune('U') {
							goto l277
						}
						position++
					}
				l278:
					{
						position280, tokenIndex280 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l281
						}
						position++
						goto l280
					l281:
						position, tokenIndex = position280, tokenIndex280
						if buffer[position] != rune('L') {
							goto l277
						}
						position++
					}
				l280:
					{
						position282, tokenIndex282 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l283
						}
						position++
						goto l282
					l283:
						position, tokenIndex = position282, tokenIndex282
						if buffer[position] != rune('E') {
							goto l277
						}
						position++
					}
				l282:
					{
						position284, tokenIndex284 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l285
						}
						position++
						goto l284
					l285:
						position, tokenIndex = position284, tokenIndex284
						if buffer[position] != rune('B') {
							goto l277
						}
						position++
					}
				l284:
					if buffer[position] != rune('1') {
						goto l277
					}
					position++
					if buffer[position] != rune('2') {
						goto l277
					}
					position++
					if buffer[position] != rune('8') {
						goto l277
					}
					position++
					goto l149
				l277:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l147
					}
					position++
					{
						position286, tokenIndex286 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l287
						}
						position++
						goto l286
					l287:
						position, tokenIndex = position286, tokenIndex286
						if buffer[position] != rune('S') {
							goto l147
						}
						position++
					}
				l286:
					{
						position288, tokenIndex288 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l289
						}
						position++
						goto l288
					l289:
						position, tokenIndex = position288, tokenIndex288
						if buffer[position] != rune('L') {
							goto l147
						}
						position++
					}
				l288:
					{
						position290, tokenIndex290 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l291
						}
						position++
						goto l290
					l291:
						position, tokenIndex = position290, tokenIndex290
						if buffer[position] != rune('E') {
							goto l147
						}
						position++
					}
				l290:
					{
						position292, tokenIndex292 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l293
						}
						position++
						goto l292
					l293:
						position, tokenIndex = position292, tokenIndex292
						if buffer[position] != rune('B') {
							goto l147
						}
						position++
					}
				l292:
					if buffer[position] != rune('1') {
						goto l147
					}
					position++
					if buffer[position] != rune('2') {
						goto l147
					}
					position++
					if buffer[position] != rune('8') {
						goto l147
					}
					position++
				}
			l149:
				add(ruleLabelContainingDirectiveName, position148)
			}
			memoize(13, position147, tokenIndex147, true)
			return true
		l147:
			memoize(13, position147, tokenIndex147, false)
			position, tokenIndex = position147, tokenIndex147
			return false
		},
		/* 14 SymbolArgs <- <(SymbolArg (WS? ',' WS? SymbolArg)*)> */
		func() bool {
			if memoized, ok := memoization[memoKey{14, position}]; ok {
				return memoizedResult(memoized)
			}
			position294, tokenIndex294 := position, tokenIndex
			{
				position295 := position
				if !_rules[ruleSymbolArg]() {
					goto l294
				}
			l296:
				{
					position297, tokenIndex297 := position, tokenIndex
					{
						position298, tokenIndex298 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l298
						}
						goto l299
					l298:
						position, tokenIndex = position298, tokenIndex298
					}
				l299:
					if buffer[position] != rune(',') {
						goto l297
					}
					position++
					{
						position300, tokenIndex300 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l300
						}
						goto l301
					l300:
						position, tokenIndex = position300, tokenIndex300
					}
				l301:
					if !_rules[ruleSymbolArg]() {
						goto l297
					}
					goto l296
				l297:
					position, tokenIndex = position297, tokenIndex297
				}
				add(ruleSymbolArgs, position295)
			}
			memoize(14, position294, tokenIndex294, true)
			return true
		l294:
			memoize(14, position294, tokenIndex294, false)
			position, tokenIndex = position294, tokenIndex294
			return false
		},
		/* 15 SymbolArg <- <SymbolExpr> */
		func() bool {
			if memoized, ok := memoization[memoKey{15, position}]; ok {
				return memoizedResult(memoized)
			}
			position302, tokenIndex302 := position, tokenIndex
			{
				position303 := position
				if !_rules[ruleSymbolExpr]() {
					goto l302
				}
				add(ruleSymbolArg, position303)
			}
			memoize(15, position302, tokenIndex302, true)
			return true
		l302:
			memoize(15, position302, tokenIndex302, false)
			position, tokenIndex = position302, tokenIndex302
			return false
		},
		/* 16 SymbolExpr <- <(SymbolAtom (WS? SymbolOperator WS? SymbolExpr)?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{16, position}]; ok {
				return memoizedResult(memoized)
			}
			position304, tokenIndex304 := position, tokenIndex
			{
				position305 := position
				if !_rules[ruleSymbolAtom]() {
					goto l304
				}
				{
					position306, tokenIndex306 := position, tokenIndex
					{
						position308, tokenIndex308 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l308
						}
						goto l309
					l308:
						position, tokenIndex = position308, tokenIndex308
					}
				l309:
					if !_rules[ruleSymbolOperator]() {
						goto l306
					}
					{
						position310, tokenIndex310 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l310
						}
						goto l311
					l310:
						position, tokenIndex = position310, tokenIndex310
					}
				l311:
					if !_rules[ruleSymbolExpr]() {
						goto l306
					}
					goto l307
				l306:
					position, tokenIndex = position306, tokenIndex306
				}
			l307:
				add(ruleSymbolExpr, position305)
			}
			memoize(16, position304, tokenIndex304, true)
			return true
		l304:
			memoize(16, position304, tokenIndex304, false)
			position, tokenIndex = position304, tokenIndex304
			return false
		},
		/* 17 SymbolAtom <- <(Offset / SymbolType / LocalLabelRef / (LocalSymbol TCMarker?) / (SymbolName Offset) / (SymbolName TCMarker?) / Dot / (OpenParen WS? SymbolExpr WS? CloseParen))> */
		func() bool {
			if memoized, ok := memoization[memoKey{17, position}]; ok {
				return memoizedResult(memoized)
			}
			position312, tokenIndex312 := position, tokenIndex
			{
				position313 := position
				{
					position314, tokenIndex314 := position, tokenIndex
					if !_rules[ruleOffset]() {
						goto l315
					}
					goto l314
				l315:
					position, tokenIndex = position314, tokenIndex314
					if !_rules[ruleSymbolType]() {
						goto l316
					}
					goto l314
				l316:
					position, tokenIndex = position314, tokenIndex314
					if !_rules[ruleLocalLabelRef]() {
						goto l317
					}
					goto l314
				l317:
					position, tokenIndex = position314, tokenIndex314
					if !_rules[ruleLocalSymbol]() {
						goto l318
					}
					{
						position319, tokenIndex319 := position, tokenIndex
						if !_rules[ruleTCMarker]() {
							goto l319
						}
						goto l320
					l319:
						position, tokenIndex = position319, tokenIndex319
					}
				l320:
					goto l314
				l318:
					position, tokenIndex = position314, tokenIndex314
					if !_rules[ruleSymbolName]() {
						goto l321
					}
					if !_rules[ruleOffset]() {
						goto l321
					}
					goto l314
				l321:
					position, tokenIndex = position314, tokenIndex314
					if !_rules[ruleSymbolName]() {
						goto l322
					}
					{
						position323, tokenIndex323 := position, tokenIndex
						if !_rules[ruleTCMarker]() {
							goto l323
						}
						goto l324
					l323:
						position, tokenIndex = position323, tokenIndex323
					}
				l324:
					goto l314
				l322:
					position, tokenIndex = position314, tokenIndex314
					if !_rules[ruleDot]() {
						goto l325
					}
					goto l314
				l325:
					position, tokenIndex = position314, tokenIndex314
					if !_rules[ruleOpenParen]() {
						goto l312
					}
					{
						position326, tokenIndex326 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l326
						}
						goto l327
					l326:
						position, tokenIndex = position326, tokenIndex326
					}
				l327:
					if !_rules[ruleSymbolExpr]() {
						goto l312
					}
					{
						position328, tokenIndex328 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l328
						}
						goto l329
					l328:
						position, tokenIndex = position328, tokenIndex328
					}
				l329:
					if !_rules[ruleCloseParen]() {
						goto l312
					}
				}
			l314:
				add(ruleSymbolAtom, position313)
			}
			memoize(17, position312, tokenIndex312, true)
			return true
		l312:
			memoize(17, position312, tokenIndex312, false)
			position, tokenIndex = position312, tokenIndex312
			return false
		},
		/* 18 SymbolOperator <- <('+' / '-' / '|' / ('<' '<') / ('>' '>'))> */
		func() bool {
			if memoized, ok := memoization[memoKey{18, position}]; ok {
				return memoizedResult(memoized)
			}
			position330, tokenIndex330 := position, tokenIndex
			{
				position331 := position
				{
					position332, tokenIndex332 := position, tokenIndex
					if buffer[position] != rune('+') {
						goto l333
					}
					position++
					goto l332
				l333:
					position, tokenIndex = position332, tokenIndex332
					if buffer[position] != rune('-') {
						goto l334
					}
					position++
					goto l332
				l334:
					position, tokenIndex = position332, tokenIndex332
					if buffer[position] != rune('|') {
						goto l335
					}
					position++
					goto l332
				l335:
					position, tokenIndex = position332, tokenIndex332
					if buffer[position] != rune('<') {
						goto l336
					}
					position++
					if buffer[position] != rune('<') {
						goto l336
					}
					position++
					goto l332
				l336:
					position, tokenIndex = position332, tokenIndex332
					if buffer[position] != rune('>') {
						goto l330
					}
					position++
					if buffer[position] != rune('>') {
						goto l330
					}
					position++
				}
			l332:
				add(ruleSymbolOperator, position331)
			}
			memoize(18, position330, tokenIndex330, true)
			return true
		l330:
			memoize(18, position330, tokenIndex330, false)
			position, tokenIndex = position330, tokenIndex330
			return false
		},
		/* 19 OpenParen <- <'('> */
		func() bool {
			if memoized, ok := memoization[memoKey{19, position}]; ok {
				return memoizedResult(memoized)
			}
			position337, tokenIndex337 := position, tokenIndex
			{
				position338 := position
				if buffer[position] != rune('(') {
					goto l337
				}
				position++
				add(ruleOpenParen, position338)
			}
			memoize(19, position337, tokenIndex337, true)
			return true
		l337:
			memoize(19, position337, tokenIndex337, false)
			position, tokenIndex = position337, tokenIndex337
			return false
		},
		/* 20 CloseParen <- <')'> */
		func() bool {
			if memoized, ok := memoization[memoKey{20, position}]; ok {
				return memoizedResult(memoized)
			}
			position339, tokenIndex339 := position, tokenIndex
			{
				position340 := position
				if buffer[position] != rune(')') {
					goto l339
				}
				position++
				add(ruleCloseParen, position340)
			}
			memoize(20, position339, tokenIndex339, true)
			return true
		l339:
			memoize(20, position339, tokenIndex339, false)
			position, tokenIndex = position339, tokenIndex339
			return false
		},
		/* 21 SymbolType <- <(('@' / '%') (('f' 'u' 'n' 'c' 't' 'i' 'o' 'n') / ('o' 'b' 'j' 'e' 'c' 't')))> */
		func() bool {
			if memoized, ok := memoization[memoKey{21, position}]; ok {
				return memoizedResult(memoized)
			}
			position341, tokenIndex341 := position, tokenIndex
			{
				position342 := position
				{
					position343, tokenIndex343 := position, tokenIndex
					if buffer[position] != rune('@') {
						goto l344
					}
					position++
					goto l343
				l344:
					position, tokenIndex = position343, tokenIndex343
					if buffer[position] != rune('%') {
						goto l341
					}
					position++
				}
			l343:
				{
					position345, tokenIndex345 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l346
					}
					position++
					if buffer[position] != rune('u') {
						goto l346
					}
					position++
					if buffer[position] != rune('n') {
						goto l346
					}
					position++
					if buffer[position] != rune('c') {
						goto l346
					}
					position++
					if buffer[position] != rune('t') {
						goto l346
					}
					position++
					if buffer[position] != rune('i') {
						goto l346
					}
					position++
					if buffer[position] != rune('o') {
						goto l346
					}
					position++
					if buffer[position] != rune('n') {
						goto l346
					}
					position++
					goto l345
				l346:
					position, tokenIndex = position345, tokenIndex345
					if buffer[position] != rune('o') {
						goto l341
					}
					position++
					if buffer[position] != rune('b') {
						goto l341
					}
					position++
					if buffer[position] != rune('j') {
						goto l341
					}
					position++
					if buffer[position] != rune('e') {
						goto l341
					}
					position++
					if buffer[position] != rune('c') {
						goto l341
					}
					position++
					if buffer[position] != rune('t') {
						goto l341
					}
					position++
				}
			l345:
				add(ruleSymbolType, position342)
			}
			memoize(21, position341, tokenIndex341, true)
			return true
		l341:
			memoize(21, position341, tokenIndex341, false)
			position, tokenIndex = position341, tokenIndex341
			return false
		},
		/* 22 Dot <- <'.'> */
		func() bool {
			if memoized, ok := memoization[memoKey{22, position}]; ok {
				return memoizedResult(memoized)
			}
			position347, tokenIndex347 := position, tokenIndex
			{
				position348 := position
				if buffer[position] != rune('.') {
					goto l347
				}
				position++
				add(ruleDot, position348)
			}
			memoize(22, position347, tokenIndex347, true)
			return true
		l347:
			memoize(22, position347, tokenIndex347, false)
			position, tokenIndex = position347, tokenIndex347
			return false
		},
		/* 23 TCMarker <- <('[' 'T' 'C' ']')> */
		func() bool {
			if memoized, ok := memoization[memoKey{23, position}]; ok {
				return memoizedResult(memoized)
			}
			position349, tokenIndex349 := position, tokenIndex
			{
				position350 := position
				if buffer[position] != rune('[') {
					goto l349
				}
				position++
				if buffer[position] != rune('T') {
					goto l349
				}
				position++
				if buffer[position] != rune('C') {
					goto l349
				}
				position++
				if buffer[position] != rune(']') {
					goto l349
				}
				position++
				add(ruleTCMarker, position350)
			}
			memoize(23, position349, tokenIndex349, true)
			return true
		l349:
			memoize(23, position349, tokenIndex349, false)
			position, tokenIndex = position349, tokenIndex349
			return false
		},
		/* 24 EscapedChar <- <('\\' .)> */
		func() bool {
			if memoized, ok := memoization[memoKey{24, position}]; ok {
				return memoizedResult(memoized)
			}
			position351, tokenIndex351 := position, tokenIndex
			{
				position352 := position
				if buffer[position] != rune('\\') {
					goto l351
				}
				position++
				if !matchDot() {
					goto l351
				}
				add(ruleEscapedChar, position352)
			}
			memoize(24, position351, tokenIndex351, true)
			return true
		l351:
			memoize(24, position351, tokenIndex351, false)
			position, tokenIndex = position351, tokenIndex351
			return false
		},
		/* 25 WS <- <(' ' / '\t')+> */
		func() bool {
			if memoized, ok := memoization[memoKey{25, position}]; ok {
				return memoizedResult(memoized)
			}
			position353, tokenIndex353 := position, tokenIndex
			{
				position354 := position
				{
					position357, tokenIndex357 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l358
					}
					position++
					goto l357
				l358:
					position, tokenIndex = position357, tokenIndex357
					if buffer[position] != rune('\t') {
						goto l353
					}
					position++
				}
			l357:
			l355:
				{
					position356, tokenIndex356 := position, tokenIndex
					{
						position359, tokenIndex359 := position, tokenIndex
						if buffer[position] != rune(' ') {
							goto l360
						}
						position++
						goto l359
					l360:
						position, tokenIndex = position359, tokenIndex359
						if buffer[position] != rune('\t') {
							goto l356
						}
						position++
					}
				l359:
					goto l355
				l356:
					position, tokenIndex = position356, tokenIndex356
				}
				add(ruleWS, position354)
			}
			memoize(25, position353, tokenIndex353, true)
			return true
		l353:
			memoize(25, position353, tokenIndex353, false)
			position, tokenIndex = position353, tokenIndex353
			return false
		},
		/* 26 Comment <- <((('/' '/') / '#') (!'\n' .)*)> */
		func() bool {
			if memoized, ok := memoization[memoKey{26, position}]; ok {
				return memoizedResult(memoized)
			}
			position361, tokenIndex361 := position, tokenIndex
			{
				position362 := position
				{
					position363, tokenIndex363 := position, tokenIndex
					if buffer[position] != rune('/') {
						goto l364
					}
					position++
					if buffer[position] != rune('/') {
						goto l364
					}
					position++
					goto l363
				l364:
					position, tokenIndex = position363, tokenIndex363
					if buffer[position] != rune('#') {
						goto l361
					}
					position++
				}
			l363:
			l365:
				{
					position366, tokenIndex366 := position, tokenIndex
					{
						position367, tokenIndex367 := position, tokenIndex
						if buffer[position] != rune('\n') {
							goto l367
						}
						position++
						goto l366
					l367:
						position, tokenIndex = position367, tokenIndex367
					}
					if !matchDot() {
						goto l366
					}
					goto l365
				l366:
					position, tokenIndex = position366, tokenIndex366
				}
				add(ruleComment, position362)
			}
			memoize(26, position361, tokenIndex361, true)
			return true
		l361:
			memoize(26, position361, tokenIndex361, false)
			position, tokenIndex = position361, tokenIndex361
			return false
		},
		/* 27 Label <- <((LocalSymbol / LocalLabel / SymbolName) ':')> */
		func() bool {
			if memoized, ok := memoization[memoKey{27, position}]; ok {
				return memoizedResult(memoized)
			}
			position368, tokenIndex368 := position, tokenIndex
			{
				position369 := position
				{
					position370, tokenIndex370 := position, tokenIndex
					if !_rules[ruleLocalSymbol]() {
						goto l371
					}
					goto l370
				l371:
					position, tokenIndex = position370, tokenIndex370
					if !_rules[ruleLocalLabel]() {
						goto l372
					}
					goto l370
				l372:
					position, tokenIndex = position370, tokenIndex370
					if !_rules[ruleSymbolName]() {
						goto l368
					}
				}
			l370:
				if buffer[position] != rune(':') {
					goto l368
				}
				position++
				add(ruleLabel, position369)
			}
			memoize(27, position368, tokenIndex368, true)
			return true
		l368:
			memoize(27, position368, tokenIndex368, false)
			position, tokenIndex = position368, tokenIndex368
			return false
		},
		/* 28 SymbolName <- <(([a-z] / [A-Z] / '.' / '_') ([a-z] / [A-Z] / '.' / ([0-9] / [0-9]) / '$' / '_')*)> */
		func() bool {
			if memoized, ok := memoization[memoKey{28, position}]; ok {
				return memoizedResult(memoized)
			}
			position373, tokenIndex373 := position, tokenIndex
			{
				position374 := position
				{
					position375, tokenIndex375 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l376
					}
					position++
					goto l375
				l376:
					position, tokenIndex = position375, tokenIndex375
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l377
					}
					position++
					goto l375
				l377:
					position, tokenIndex = position375, tokenIndex375
					if buffer[position] != rune('.') {
						goto l378
					}
					position++
					goto l375
				l378:
					position, tokenIndex = position375, tokenIndex375
					if buffer[position] != rune('_') {
						goto l373
					}
					position++
				}
			l375:
			l379:
				{
					position380, tokenIndex380 := position, tokenIndex
					{
						position381, tokenIndex381 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l382
						}
						position++
						goto l381
					l382:
						position, tokenIndex = position381, tokenIndex381
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l383
						}
						position++
						goto l381
					l383:
						position, tokenIndex = position381, tokenIndex381
						if buffer[position] != rune('.') {
							goto l384
						}
						position++
						goto l381
					l384:
						position, tokenIndex = position381, tokenIndex381
						{
							position386, tokenIndex386 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l387
							}
							position++
							goto l386
						l387:
							position, tokenIndex = position386, tokenIndex386
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l385
							}
							position++
						}
					l386:
						goto l381
					l385:
						position, tokenIndex = position381, tokenIndex381
						if buffer[position] != rune('$') {
							goto l388
						}
						position++
						goto l381
					l388:
						position, tokenIndex = position381, tokenIndex381
						if buffer[position] != rune('_') {
							goto l380
						}
						position++
					}
				l381:
					goto l379
				l380:
					position, tokenIndex = position380, tokenIndex380
				}
				add(ruleSymbolName, position374)
			}
			memoize(28, position373, tokenIndex373, true)
			return true
		l373:
			memoize(28, position373, tokenIndex373, false)
			position, tokenIndex = position373, tokenIndex373
			return false
		},
		/* 29 LocalSymbol <- <('.' 'L' ([a-z] / [A-Z] / ([a-z] / [A-Z]) / '.' / ([0-9] / [0-9]) / '$' / '_')+)> */
		func() bool {
			if memoized, ok := memoization[memoKey{29, position}]; ok {
				return memoizedResult(memoized)
			}
			position389, tokenIndex389 := position, tokenIndex
			{
				position390 := position
				if buffer[position] != rune('.') {
					goto l389
				}
				position++
				if buffer[position] != rune('L') {
					goto l389
				}
				position++
				{
					position393, tokenIndex393 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l394
					}
					position++
					goto l393
				l394:
					position, tokenIndex = position393, tokenIndex393
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l395
					}
					position++
					goto l393
				l395:
					position, tokenIndex = position393, tokenIndex393
					{
						position397, tokenIndex397 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l398
						}
						position++
						goto l397
					l398:
						position, tokenIndex = position397, tokenIndex397
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l396
						}
						position++
					}
				l397:
					goto l393
				l396:
					position, tokenIndex = position393, tokenIndex393
					if buffer[position] != rune('.') {
						goto l399
					}
					position++
					goto l393
				l399:
					position, tokenIndex = position393, tokenIndex393
					{
						position401, tokenIndex401 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l402
						}
						position++
						goto l401
					l402:
						position, tokenIndex = position401, tokenIndex401
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l400
						}
						position++
					}
				l401:
					goto l393
				l400:
					position, tokenIndex = position393, tokenIndex393
					if buffer[position] != rune('$') {
						goto l403
					}
					position++
					goto l393
				l403:
					position, tokenIndex = position393, tokenIndex393
					if buffer[position] != rune('_') {
						goto l389
					}
					position++
				}
			l393:
			l391:
				{
					position392, tokenIndex392 := position, tokenIndex
					{
						position404, tokenIndex404 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l405
						}
						position++
						goto l404
					l405:
						position, tokenIndex = position404, tokenIndex404
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l406
						}
						position++
						goto l404
					l406:
						position, tokenIndex = position404, tokenIndex404
						{
							position408, tokenIndex408 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l409
							}
							position++
							goto l408
						l409:
							position, tokenIndex = position408, tokenIndex408
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l407
							}
							position++
						}
					l408:
						goto l404
					l407:
						position, tokenIndex = position404, tokenIndex404
						if buffer[position] != rune('.') {
							goto l410
						}
						position++
						goto l404
					l410:
						position, tokenIndex = position404, tokenIndex404
						{
							position412, tokenIndex412 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l413
							}
							position++
							goto l412
						l413:
							position, tokenIndex = position412, tokenIndex412
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l411
							}
							position++
						}
					l412:
						goto l404
					l411:
						position, tokenIndex = position404, tokenIndex404
						if buffer[position] != rune('$') {
							goto l414
						}
						position++
						goto l404
					l414:
						position, tokenIndex = position404, tokenIndex404
						if buffer[position] != rune('_') {
							goto l392
						}
						position++
					}
				l404:
					goto l391
				l392:
					position, tokenIndex = position392, tokenIndex392
				}
				add(ruleLocalSymbol, position390)
			}
			memoize(29, position389, tokenIndex389, true)
			return true
		l389:
			memoize(29, position389, tokenIndex389, false)
			position, tokenIndex = position389, tokenIndex389
			return false
		},
		/* 30 LocalLabel <- <([0-9] ([0-9] / '$')*)> */
		func() bool {
			if memoized, ok := memoization[memoKey{30, position}]; ok {
				return memoizedResult(memoized)
			}
			position415, tokenIndex415 := position, tokenIndex
			{
				position416 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l415
				}
				position++
			l417:
				{
					position418, tokenIndex418 := position, tokenIndex
					{
						position419, tokenIndex419 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l420
						}
						position++
						goto l419
					l420:
						position, tokenIndex = position419, tokenIndex419
						if buffer[position] != rune('$') {
							goto l418
						}
						position++
					}
				l419:
					goto l417
				l418:
					position, tokenIndex = position418, tokenIndex418
				}
				add(ruleLocalLabel, position416)
			}
			memoize(30, position415, tokenIndex415, true)
			return true
		l415:
			memoize(30, position415, tokenIndex415, false)
			position, tokenIndex = position415, tokenIndex415
			return false
		},
		/* 31 LocalLabelRef <- <([0-9] ([0-9] / '$')* ('b' / 'f'))> */
		func() bool {
			if memoized, ok := memoization[memoKey{31, position}]; ok {
				return memoizedResult(memoized)
			}
			position421, tokenIndex421 := position, tokenIndex
			{
				position422 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l421
				}
				position++
			l423:
				{
					position424, tokenIndex424 := position, tokenIndex
					{
						position425, tokenIndex425 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l426
						}
						position++
						goto l425
					l426:
						position, tokenIndex = position425, tokenIndex425
						if buffer[position] != rune('$') {
							goto l424
						}
						position++
					}
				l425:
					goto l423
				l424:
					position, tokenIndex = position424, tokenIndex424
				}
				{
					position427, tokenIndex427 := position, tokenIndex
					if buffer[position] != rune('b') {
						goto l428
					}
					position++
					goto l427
				l428:
					position, tokenIndex = position427, tokenIndex427
					if buffer[position] != rune('f') {
						goto l421
					}
					position++
				}
			l427:
				add(ruleLocalLabelRef, position422)
			}
			memoize(31, position421, tokenIndex421, true)
			return true
		l421:
			memoize(31, position421, tokenIndex421, false)
			position, tokenIndex = position421, tokenIndex421
			return false
		},
		/* 32 Instruction <- <(InstructionName (WS InstructionArg (WS? ','? WS? InstructionArg)*)?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{32, position}]; ok {
				return memoizedResult(memoized)
			}
			position429, tokenIndex429 := position, tokenIndex
			{
				position430 := position
				if !_rules[ruleInstructionName]() {
					goto l429
				}
				{
					position431, tokenIndex431 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l431
					}
					if !_rules[ruleInstructionArg]() {
						goto l431
					}
				l433:
					{
						position434, tokenIndex434 := position, tokenIndex
						{
							position435, tokenIndex435 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l435
							}
							goto l436
						l435:
							position, tokenIndex = position435, tokenIndex435
						}
					l436:
						{
							position437, tokenIndex437 := position, tokenIndex
							if buffer[position] != rune(',') {
								goto l437
							}
							position++
							goto l438
						l437:
							position, tokenIndex = position437, tokenIndex437
						}
					l438:
						{
							position439, tokenIndex439 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l439
							}
							goto l440
						l439:
							position, tokenIndex = position439, tokenIndex439
						}
					l440:
						if !_rules[ruleInstructionArg]() {
							goto l434
						}
						goto l433
					l434:
						position, tokenIndex = position434, tokenIndex434
					}
					goto l432
				l431:
					position, tokenIndex = position431, tokenIndex431
				}
			l432:
				add(ruleInstruction, position430)
			}
			memoize(32, position429, tokenIndex429, true)
			return true
		l429:
			memoize(32, position429, tokenIndex429, false)
			position, tokenIndex = position429, tokenIndex429
			return false
		},
		/* 33 InstructionName <- <(([a-z] / [A-Z]) ([a-z] / [A-Z] / '.' / ([0-9] / [0-9]))* ('.' / '+' / '-')?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{33, position}]; ok {
				return memoizedResult(memoized)
			}
			position441, tokenIndex441 := position, tokenIndex
			{
				position442 := position
				{
					position443, tokenIndex443 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l444
					}
					position++
					goto l443
				l444:
					position, tokenIndex = position443, tokenIndex443
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l441
					}
					position++
				}
			l443:
			l445:
				{
					position446, tokenIndex446 := position, tokenIndex
					{
						position447, tokenIndex447 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l448
						}
						position++
						goto l447
					l448:
						position, tokenIndex = position447, tokenIndex447
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l449
						}
						position++
						goto l447
					l449:
						position, tokenIndex = position447, tokenIndex447
						if buffer[position] != rune('.') {
							goto l450
						}
						position++
						goto l447
					l450:
						position, tokenIndex = position447, tokenIndex447
						{
							position451, tokenIndex451 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l452
							}
							position++
							goto l451
						l452:
							position, tokenIndex = position451, tokenIndex451
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l446
							}
							position++
						}
					l451:
					}
				l447:
					goto l445
				l446:
					position, tokenIndex = position446, tokenIndex446
				}
				{
					position453, tokenIndex453 := position, tokenIndex
					{
						position455, tokenIndex455 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l456
						}
						position++
						goto l455
					l456:
						position, tokenIndex = position455, tokenIndex455
						if buffer[position] != rune('+') {
							goto l457
						}
						position++
						goto l455
					l457:
						position, tokenIndex = position455, tokenIndex455
						if buffer[position] != rune('-') {
							goto l453
						}
						position++
					}
				l455:
					goto l454
				l453:
					position, tokenIndex = position453, tokenIndex453
				}
			l454:
				add(ruleInstructionName, position442)
			}
			memoize(33, position441, tokenIndex441, true)
			return true
		l441:
			memoize(33, position441, tokenIndex441, false)
			position, tokenIndex = position441, tokenIndex441
			return false
		},
		/* 34 InstructionArg <- <(IndirectionIndicator? (ARMConstantTweak / RegisterOrConstant / LocalLabelRef / TOCRefHigh / TOCRefLow / GOTLocation / GOTSymbolOffset / MemoryRef) AVX512Token*)> */
		func() bool {
			if memoized, ok := memoization[memoKey{34, position}]; ok {
				return memoizedResult(memoized)
			}
			position458, tokenIndex458 := position, tokenIndex
			{
				position459 := position
				{
					position460, tokenIndex460 := position, tokenIndex
					if !_rules[ruleIndirectionIndicator]() {
						goto l460
					}
					goto l461
				l460:
					position, tokenIndex = position460, tokenIndex460
				}
			l461:
				{
					position462, tokenIndex462 := position, tokenIndex
					if !_rules[ruleARMConstantTweak]() {
						goto l463
					}
					goto l462
				l463:
					position, tokenIndex = position462, tokenIndex462
					if !_rules[ruleRegisterOrConstant]() {
						goto l464
					}
					goto l462
				l464:
					position, tokenIndex = position462, tokenIndex462
					if !_rules[ruleLocalLabelRef]() {
						goto l465
					}
					goto l462
				l465:
					position, tokenIndex = position462, tokenIndex462
					if !_rules[ruleTOCRefHigh]() {
						goto l466
					}
					goto l462
				l466:
					position, tokenIndex = position462, tokenIndex462
					if !_rules[ruleTOCRefLow]() {
						goto l467
					}
					goto l462
				l467:
					position, tokenIndex = position462, tokenIndex462
					if !_rules[ruleGOTLocation]() {
						goto l468
					}
					goto l462
				l468:
					position, tokenIndex = position462, tokenIndex462
					if !_rules[ruleGOTSymbolOffset]() {
						goto l469
					}
					goto l462
				l469:
					position, tokenIndex = position462, tokenIndex462
					if !_rules[ruleMemoryRef]() {
						goto l458
					}
				}
			l462:
			l470:
				{
					position471, tokenIndex471 := position, tokenIndex
					if !_rules[ruleAVX512Token]() {
						goto l471
					}
					goto l470
				l471:
					position, tokenIndex = position471, tokenIndex471
				}
				add(ruleInstructionArg, position459)
			}
			memoize(34, position458, tokenIndex458, true)
			return true
		l458:
			memoize(34, position458, tokenIndex458, false)
			position, tokenIndex = position458, tokenIndex458
			return false
		},
		/* 35 GOTLocation <- <('$' '_' 'G' 'L' 'O' 'B' 'A' 'L' '_' 'O' 'F' 'F' 'S' 'E' 'T' '_' 'T' 'A' 'B' 'L' 'E' '_' '-' LocalSymbol)> */
		func() bool {
			if memoized, ok := memoization[memoKey{35, position}]; ok {
				return memoizedResult(memoized)
			}
			position472, tokenIndex472 := position, tokenIndex
			{
				position473 := position
				if buffer[position] != rune('$') {
					goto l472
				}
				position++
				if buffer[position] != rune('_') {
					goto l472
				}
				position++
				if buffer[position] != rune('G') {
					goto l472
				}
				position++
				if buffer[position] != rune('L') {
					goto l472
				}
				position++
				if buffer[position] != rune('O') {
					goto l472
				}
				position++
				if buffer[position] != rune('B') {
					goto l472
				}
				position++
				if buffer[position] != rune('A') {
					goto l472
				}
				position++
				if buffer[position] != rune('L') {
					goto l472
				}
				position++
				if buffer[position] != rune('_') {
					goto l472
				}
				position++
				if buffer[position] != rune('O') {
					goto l472
				}
				position++
				if buffer[position] != rune('F') {
					goto l472
				}
				position++
				if buffer[position] != rune('F') {
					goto l472
				}
				position++
				if buffer[position] != rune('S') {
					goto l472
				}
				position++
				if buffer[position] != rune('E') {
					goto l472
				}
				position++
				if buffer[position] != rune('T') {
					goto l472
				}
				position++
				if buffer[position] != rune('_') {
					goto l472
				}
				position++
				if buffer[position] != rune('T') {
					goto l472
				}
				position++
				if buffer[position] != rune('A') {
					goto l472
				}
				position++
				if buffer[position] != rune('B') {
					goto l472
				}
				position++
				if buffer[position] != rune('L') {
					goto l472
				}
				position++
				if buffer[position] != rune('E') {
					goto l472
				}
				position++
				if buffer[position] != rune('_') {
					goto l472
				}
				position++
				if buffer[position] != rune('-') {
					goto l472
				}
				position++
				if !_rules[ruleLocalSymbol]() {
					goto l472
				}
				add(ruleGOTLocation, position473)
			}
			memoize(35, position472, tokenIndex472, true)
			return true
		l472:
			memoize(35, position472, tokenIndex472, false)
			position, tokenIndex = position472, tokenIndex472
			return false
		},
		/* 36 GOTSymbolOffset <- <(('$' SymbolName ('@' 'G' 'O' 'T') ('O' 'F' 'F')?) / (':' ('g' / 'G') ('o' / 'O') ('t' / 'T') ':' SymbolName))> */
		func() bool {
			if memoized, ok := memoization[memoKey{36, position}]; ok {
				return memoizedResult(memoized)
			}
			position474, tokenIndex474 := position, tokenIndex
			{
				position475 := position
				{
					position476, tokenIndex476 := position, tokenIndex
					if buffer[position] != rune('$') {
						goto l477
					}
					position++
					if !_rules[ruleSymbolName]() {
						goto l477
					}
					if buffer[position] != rune('@') {
						goto l477
					}
					position++
					if buffer[position] != rune('G') {
						goto l477
					}
					position++
					if buffer[position] != rune('O') {
						goto l477
					}
					position++
					if buffer[position] != rune('T') {
						goto l477
					}
					position++
					{
						position478, tokenIndex478 := position, tokenIndex
						if buffer[position] != rune('O') {
							goto l478
						}
						position++
						if buffer[position] != rune('F') {
							goto l478
						}
						position++
						if buffer[position] != rune('F') {
							goto l478
						}
						position++
						goto l479
					l478:
						position, tokenIndex = position478, tokenIndex478
					}
				l479:
					goto l476
				l477:
					position, tokenIndex = position476, tokenIndex476
					if buffer[position] != rune(':') {
						goto l474
					}
					position++
					{
						position480, tokenIndex480 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l481
						}
						position++
						goto l480
					l481:
						position, tokenIndex = position480, tokenIndex480
						if buffer[position] != rune('G') {
							goto l474
						}
						position++
					}
				l480:
					{
						position482, tokenIndex482 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l483
						}
						position++
						goto l482
					l483:
						position, tokenIndex = position482, tokenIndex482
						if buffer[position] != rune('O') {
							goto l474
						}
						position++
					}
				l482:
					{
						position484, tokenIndex484 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l485
						}
						position++
						goto l484
					l485:
						position, tokenIndex = position484, tokenIndex484
						if buffer[position] != rune('T') {
							goto l474
						}
						position++
					}
				l484:
					if buffer[position] != rune(':') {
						goto l474
					}
					position++
					if !_rules[ruleSymbolName]() {
						goto l474
					}
				}
			l476:
				add(ruleGOTSymbolOffset, position475)
			}
			memoize(36, position474, tokenIndex474, true)
			return true
		l474:
			memoize(36, position474, tokenIndex474, false)
			position, tokenIndex = position474, tokenIndex474
			return false
		},
		/* 37 AVX512Token <- <(WS? '{' '%'? ([0-9] / [a-z])* '}')> */
		func() bool {
			if memoized, ok := memoization[memoKey{37, position}]; ok {
				return memoizedResult(memoized)
			}
			position486, tokenIndex486 := position, tokenIndex
			{
				position487 := position
				{
					position488, tokenIndex488 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l488
					}
					goto l489
				l488:
					position, tokenIndex = position488, tokenIndex488
				}
			l489:
				if buffer[position] != rune('{') {
					goto l486
				}
				position++
				{
					position490, tokenIndex490 := position, tokenIndex
					if buffer[position] != rune('%') {
						goto l490
					}
					position++
					goto l491
				l490:
					position, tokenIndex = position490, tokenIndex490
				}
			l491:
			l492:
				{
					position493, tokenIndex493 := position, tokenIndex
					{
						position494, tokenIndex494 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l495
						}
						position++
						goto l494
					l495:
						position, tokenIndex = position494, tokenIndex494
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l493
						}
						position++
					}
				l494:
					goto l492
				l493:
					position, tokenIndex = position493, tokenIndex493
				}
				if buffer[position] != rune('}') {
					goto l486
				}
				position++
				add(ruleAVX512Token, position487)
			}
			memoize(37, position486, tokenIndex486, true)
			return true
		l486:
			memoize(37, position486, tokenIndex486, false)
			position, tokenIndex = position486, tokenIndex486
			return false
		},
		/* 38 TOCRefHigh <- <('.' 'T' 'O' 'C' '.' '-' (('0' 'b') / ('.' 'L' ([a-z] / [A-Z] / '_' / [0-9])+)) ('@' ('h' / 'H') ('a' / 'A')))> */
		func() bool {
			if memoized, ok := memoization[memoKey{38, position}]; ok {
				return memoizedResult(memoized)
			}
			position496, tokenIndex496 := position, tokenIndex
			{
				position497 := position
				if buffer[position] != rune('.') {
					goto l496
				}
				position++
				if buffer[position] != rune('T') {
					goto l496
				}
				position++
				if buffer[position] != rune('O') {
					goto l496
				}
				position++
				if buffer[position] != rune('C') {
					goto l496
				}
				position++
				if buffer[position] != rune('.') {
					goto l496
				}
				position++
				if buffer[position] != rune('-') {
					goto l496
				}
				position++
				{
					position498, tokenIndex498 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l499
					}
					position++
					if buffer[position] != rune('b') {
						goto l499
					}
					position++
					goto l498
				l499:
					position, tokenIndex = position498, tokenIndex498
					if buffer[position] != rune('.') {
						goto l496
					}
					position++
					if buffer[position] != rune('L') {
						goto l496
					}
					position++
					{
						position502, tokenIndex502 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l503
						}
						position++
						goto l502
					l503:
						position, tokenIndex = position502, tokenIndex502
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l504
						}
						position++
						goto l502
					l504:
						position, tokenIndex = position502, tokenIndex502
						if buffer[position] != rune('_') {
							goto l505
						}
						position++
						goto l502
					l505:
						position, tokenIndex = position502, tokenIndex502
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l496
						}
						position++
					}
				l502:
				l500:
					{
						position501, tokenIndex501 := position, tokenIndex
						{
							position506, tokenIndex506 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l507
							}
							position++
							goto l506
						l507:
							position, tokenIndex = position506, tokenIndex506
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l508
							}
							position++
							goto l506
						l508:
							position, tokenIndex = position506, tokenIndex506
							if buffer[position] != rune('_') {
								goto l509
							}
							position++
							goto l506
						l509:
							position, tokenIndex = position506, tokenIndex506
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l501
							}
							position++
						}
					l506:
						goto l500
					l501:
						position, tokenIndex = position501, tokenIndex501
					}
				}
			l498:
				if buffer[position] != rune('@') {
					goto l496
				}
				position++
				{
					position510, tokenIndex510 := position, tokenIndex
					if buffer[position] != rune('h') {
						goto l511
					}
					position++
					goto l510
				l511:
					position, tokenIndex = position510, tokenIndex510
					if buffer[position] != rune('H') {
						goto l496
					}
					position++
				}
			l510:
				{
					position512, tokenIndex512 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l513
					}
					position++
					goto l512
				l513:
					position, tokenIndex = position512, tokenIndex512
					if buffer[position] != rune('A') {
						goto l496
					}
					position++
				}
			l512:
				add(ruleTOCRefHigh, position497)
			}
			memoize(38, position496, tokenIndex496, true)
			return true
		l496:
			memoize(38, position496, tokenIndex496, false)
			position, tokenIndex = position496, tokenIndex496
			return false
		},
		/* 39 TOCRefLow <- <('.' 'T' 'O' 'C' '.' '-' (('0' 'b') / ('.' 'L' ([a-z] / [A-Z] / '_' / [0-9])+)) ('@' ('l' / 'L')))> */
		func() bool {
			if memoized, ok := memoization[memoKey{39, position}]; ok {
				return memoizedResult(memoized)
			}
			position514, tokenIndex514 := position, tokenIndex
			{
				position515 := position
				if buffer[position] != rune('.') {
					goto l514
				}
				position++
				if buffer[position] != rune('T') {
					goto l514
				}
				position++
				if buffer[position] != rune('O') {
					goto l514
				}
				position++
				if buffer[position] != rune('C') {
					goto l514
				}
				position++
				if buffer[position] != rune('.') {
					goto l514
				}
				position++
				if buffer[position] != rune('-') {
					goto l514
				}
				position++
				{
					position516, tokenIndex516 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l517
					}
					position++
					if buffer[position] != rune('b') {
						goto l517
					}
					position++
					goto l516
				l517:
					position, tokenIndex = position516, tokenIndex516
					if buffer[position] != rune('.') {
						goto l514
					}
					position++
					if buffer[position] != rune('L') {
						goto l514
					}
					position++
					{
						position520, tokenIndex520 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l521
						}
						position++
						goto l520
					l521:
						position, tokenIndex = position520, tokenIndex520
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l522
						}
						position++
						goto l520
					l522:
						position, tokenIndex = position520, tokenIndex520
						if buffer[position] != rune('_') {
							goto l523
						}
						position++
						goto l520
					l523:
						position, tokenIndex = position520, tokenIndex520
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l514
						}
						position++
					}
				l520:
				l518:
					{
						position519, tokenIndex519 := position, tokenIndex
						{
							position524, tokenIndex524 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l525
							}
							position++
							goto l524
						l525:
							position, tokenIndex = position524, tokenIndex524
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l526
							}
							position++
							goto l524
						l526:
							position, tokenIndex = position524, tokenIndex524
							if buffer[position] != rune('_') {
								goto l527
							}
							position++
							goto l524
						l527:
							position, tokenIndex = position524, tokenIndex524
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l519
							}
							position++
						}
					l524:
						goto l518
					l519:
						position, tokenIndex = position519, tokenIndex519
					}
				}
			l516:
				if buffer[position] != rune('@') {
					goto l514
				}
				position++
				{
					position528, tokenIndex528 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l529
					}
					position++
					goto l528
				l529:
					position, tokenIndex = position528, tokenIndex528
					if buffer[position] != rune('L') {
						goto l514
					}
					position++
				}
			l528:
				add(ruleTOCRefLow, position515)
			}
			memoize(39, position514, tokenIndex514, true)
			return true
		l514:
			memoize(39, position514, tokenIndex514, false)
			position, tokenIndex = position514, tokenIndex514
			return false
		},
		/* 40 IndirectionIndicator <- <'*'> */
		func() bool {
			if memoized, ok := memoization[memoKey{40, position}]; ok {
				return memoizedResult(memoized)
			}
			position530, tokenIndex530 := position, tokenIndex
			{
				position531 := position
				if buffer[position] != rune('*') {
					goto l530
				}
				position++
				add(ruleIndirectionIndicator, position531)
			}
			memoize(40, position530, tokenIndex530, true)
			return true
		l530:
			memoize(40, position530, tokenIndex530, false)
			position, tokenIndex = position530, tokenIndex530
			return false
		},
		/* 41 RegisterOrConstant <- <((('%' ([a-z] / [A-Z]) ([a-z] / [A-Z] / ([0-9] / [0-9]))*) / ('$' [0-9]+ WS? '*' WS? '(' [0-9]+ WS? '-' WS? [0-9]+ ')') / ('$'? ((Offset Offset) / Offset)) / ('#' Offset ('*' [0-9]+ ('-' [0-9] [0-9]*)?)?) / ('#' '~'? '(' [0-9] WS? ('<' '<') WS? [0-9] [0-9]? ')') / (('#' / '$') '~'? ('0' 'x')? ([0-9] / [0-9] / ([a-f] / [A-F]))+) / ('$' '(' '-' [0-9]+ ')') / ARMRegister) !('f' / 'b' / ':' / '(' / '+' / '-'))> */
		func() bool {
			if memoized, ok := memoization[memoKey{41, position}]; ok {
				return memoizedResult(memoized)
			}
			position532, tokenIndex532 := position, tokenIndex
			{
				position533 := position
				{
					position534, tokenIndex534 := position, tokenIndex
					if buffer[position] != rune('%') {
						goto l535
					}
					position++
					{
						position536, tokenIndex536 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l537
						}
						position++
						goto l536
					l537:
						position, tokenIndex = position536, tokenIndex536
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l535
						}
						position++
					}
				l536:
				l538:
					{
						position539, tokenIndex539 := position, tokenIndex
						{
							position540, tokenIndex540 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l541
							}
							position++
							goto l540
						l541:
							position, tokenIndex = position540, tokenIndex540
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l542
							}
							position++
							goto l540
						l542:
							position, tokenIndex = position540, tokenIndex540
							{
								position543, tokenIndex543 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l544
								}
								position++
								goto l543
							l544:
								position, tokenIndex = position543, tokenIndex543
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l539
								}
								position++
							}
						l543:
						}
					l540:
						goto l538
					l539:
						position, tokenIndex = position539, tokenIndex539
					}
					goto l534
				l535:
					position, tokenIndex = position534, tokenIndex534
					if buffer[position] != rune('$') {
						goto l545
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l545
					}
					position++
				l546:
					{
						position547, tokenIndex547 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l547
						}
						position++
						goto l546
					l547:
						position, tokenIndex = position547, tokenIndex547
					}
					{
						position548, tokenIndex548 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l548
						}
						goto l549
					l548:
						position, tokenIndex = position548, tokenIndex548
					}
				l549:
					if buffer[position] != rune('*') {
						goto l545
					}
					position++
					{
						position550, tokenIndex550 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l550
						}
						goto l551
					l550:
						position, tokenIndex = position550, tokenIndex550
					}
				l551:
					if buffer[position] != rune('(') {
						goto l545
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l545
					}
					position++
				l552:
					{
						position553, tokenIndex553 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l553
						}
						position++
						goto l552
					l553:
						position, tokenIndex = position553, tokenIndex553
					}
					{
						position554, tokenIndex554 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l554
						}
						goto l555
					l554:
						position, tokenIndex = position554, tokenIndex554
					}
				l555:
					if buffer[position] != rune('-') {
						goto l545
					}
					position++
					{
						position556, tokenIndex556 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l556
						}
						goto l557
					l556:
						position, tokenIndex = position556, tokenIndex556
					}
				l557:
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l545
					}
					position++
				l558:
					{
						position559, tokenIndex559 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l559
						}
						position++
						goto l558
					l559:
						position, tokenIndex = position559, tokenIndex559
					}
					if buffer[position] != rune(')') {
						goto l545
					}
					position++
					goto l534
				l545:
					position, tokenIndex = position534, tokenIndex534
					{
						position561, tokenIndex561 := position, tokenIndex
						if buffer[position] != rune('$') {
							goto l561
						}
						position++
						goto l562
					l561:
						position, tokenIndex = position561, tokenIndex561
					}
				l562:
					{
						position563, tokenIndex563 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l564
						}
						if !_rules[ruleOffset]() {
							goto l564
						}
						goto l563
					l564:
						position, tokenIndex = position563, tokenIndex563
						if !_rules[ruleOffset]() {
							goto l560
						}
					}
				l563:
					goto l534
				l560:
					position, tokenIndex = position534, tokenIndex534
					if buffer[position] != rune('#') {
						goto l565
					}
					position++
					if !_rules[ruleOffset]() {
						goto l565
					}
					{
						position566, tokenIndex566 := position, tokenIndex
						if buffer[position] != rune('*') {
							goto l566
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l566
						}
						position++
					l568:
						{
							position569, tokenIndex569 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l569
							}
							position++
							goto l568
						l569:
							position, tokenIndex = position569, tokenIndex569
						}
						{
							position570, tokenIndex570 := position, tokenIndex
							if buffer[position] != rune('-') {
								goto l570
							}
							position++
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l570
							}
							position++
						l572:
							{
								position573, tokenIndex573 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l573
								}
								position++
								goto l572
							l573:
								position, tokenIndex = position573, tokenIndex573
							}
							goto l571
						l570:
							position, tokenIndex = position570, tokenIndex570
						}
					l571:
						goto l567
					l566:
						position, tokenIndex = position566, tokenIndex566
					}
				l567:
					goto l534
				l565:
					position, tokenIndex = position534, tokenIndex534
					if buffer[position] != rune('#') {
						goto l574
					}
					position++
					{
						position575, tokenIndex575 := position, tokenIndex
						if buffer[position] != rune('~') {
							goto l575
						}
						position++
						goto l576
					l575:
						position, tokenIndex = position575, tokenIndex575
					}
				l576:
					if buffer[position] != rune('(') {
						goto l574
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l574
					}
					position++
					{
						position577, tokenIndex577 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l577
						}
						goto l578
					l577:
						position, tokenIndex = position577, tokenIndex577
					}
				l578:
					if buffer[position] != rune('<') {
						goto l574
					}
					position++
					if buffer[position] != rune('<') {
						goto l574
					}
					position++
					{
						position579, tokenIndex579 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l579
						}
						goto l580
					l579:
						position, tokenIndex = position579, tokenIndex579
					}
				l580:
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l574
					}
					position++
					{
						position581, tokenIndex581 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l581
						}
						position++
						goto l582
					l581:
						position, tokenIndex = position581, tokenIndex581
					}
				l582:
					if buffer[position] != rune(')') {
						goto l574
					}
					position++
					goto l534
				l574:
					position, tokenIndex = position534, tokenIndex534
					{
						position584, tokenIndex584 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l585
						}
						position++
						goto l584
					l585:
						position, tokenIndex = position584, tokenIndex584
						if buffer[position] != rune('$') {
							goto l583
						}
						position++
					}
				l584:
					{
						position586, tokenIndex586 := position, tokenIndex
						if buffer[position] != rune('~') {
							goto l586
						}
						position++
						goto l587
					l586:
						position, tokenIndex = position586, tokenIndex586
					}
				l587:
					{
						position588, tokenIndex588 := position, tokenIndex
						if buffer[position] != rune('0') {
							goto l588
						}
						position++
						if buffer[position] != rune('x') {
							goto l588
						}
						position++
						goto l589
					l588:
						position, tokenIndex = position588, tokenIndex588
					}
				l589:
					{
						position592, tokenIndex592 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l593
						}
						position++
						goto l592
					l593:
						position, tokenIndex = position592, tokenIndex592
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l594
						}
						position++
						goto l592
					l594:
						position, tokenIndex = position592, tokenIndex592
						{
							position595, tokenIndex595 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('f') {
								goto l596
							}
							position++
							goto l595
						l596:
							position, tokenIndex = position595, tokenIndex595
							if c := buffer[position]; c < rune('A') || c > rune('F') {
								goto l583
							}
							position++
						}
					l595:
					}
				l592:
				l590:
					{
						position591, tokenIndex591 := position, tokenIndex
						{
							position597, tokenIndex597 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l598
							}
							position++
							goto l597
						l598:
							position, tokenIndex = position597, tokenIndex597
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l599
							}
							position++
							goto l597
						l599:
							position, tokenIndex = position597, tokenIndex597
							{
								position600, tokenIndex600 := position, tokenIndex
								if c := buffer[position]; c < rune('a') || c > rune('f') {
									goto l601
								}
								position++
								goto l600
							l601:
								position, tokenIndex = position600, tokenIndex600
								if c := buffer[position]; c < rune('A') || c > rune('F') {
									goto l591
								}
								position++
							}
						l600:
						}
					l597:
						goto l590
					l591:
						position, tokenIndex = position591, tokenIndex591
					}
					goto l534
				l583:
					position, tokenIndex = position534, tokenIndex534
					if buffer[position] != rune('$') {
						goto l602
					}
					position++
					if buffer[position] != rune('(') {
						goto l602
					}
					position++
					if buffer[position] != rune('-') {
						goto l602
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l602
					}
					position++
				l603:
					{
						position604, tokenIndex604 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l604
						}
						position++
						goto l603
					l604:
						position, tokenIndex = position604, tokenIndex604
					}
					if buffer[position] != rune(')') {
						goto l602
					}
					position++
					goto l534
				l602:
					position, tokenIndex = position534, tokenIndex534
					if !_rules[ruleARMRegister]() {
						goto l532
					}
				}
			l534:
				{
					position605, tokenIndex605 := position, tokenIndex
					{
						position606, tokenIndex606 := position, tokenIndex
						if buffer[position] != rune('f') {
							goto l607
						}
						position++
						goto l606
					l607:
						position, tokenIndex = position606, tokenIndex606
						if buffer[position] != rune('b') {
							goto l608
						}
						position++
						goto l606
					l608:
						position, tokenIndex = position606, tokenIndex606
						if buffer[position] != rune(':') {
							goto l609
						}
						position++
						goto l606
					l609:
						position, tokenIndex = position606, tokenIndex606
						if buffer[position] != rune('(') {
							goto l610
						}
						position++
						goto l606
					l610:
						position, tokenIndex = position606, tokenIndex606
						if buffer[position] != rune('+') {
							goto l611
						}
						position++
						goto l606
					l611:
						position, tokenIndex = position606, tokenIndex606
						if buffer[position] != rune('-') {
							goto l605
						}
						position++
					}
				l606:
					goto l532
				l605:
					position, tokenIndex = position605, tokenIndex605
				}
				add(ruleRegisterOrConstant, position533)
			}
			memoize(41, position532, tokenIndex532, true)
			return true
		l532:
			memoize(41, position532, tokenIndex532, false)
			position, tokenIndex = position532, tokenIndex532
			return false
		},
		/* 42 ARMConstantTweak <- <(((('u' / 's') (('x' / 'X') ('t' / 'T')) ('x' / 'w' / 'h' / 'b')) / (('l' / 'L') ('s' / 'S') ('l' / 'L')) / (('l' / 'L') ('s' / 'S') ('r' / 'R')) / (('r' / 'R') ('o' / 'O') ('r' / 'R')) / (('a' / 'A') ('s' / 'S') ('r' / 'R'))) (WS '#'? Offset)?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{42, position}]; ok {
				return memoizedResult(memoized)
			}
			position612, tokenIndex612 := position, tokenIndex
			{
				position613 := position
				{
					position614, tokenIndex614 := position, tokenIndex
					{
						position616, tokenIndex616 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l617
						}
						position++
						goto l616
					l617:
						position, tokenIndex = position616, tokenIndex616
						if buffer[position] != rune('s') {
							goto l615
						}
						position++
					}
				l616:
					{
						position618, tokenIndex618 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l619
						}
						position++
						goto l618
					l619:
						position, tokenIndex = position618, tokenIndex618
						if buffer[position] != rune('X') {
							goto l615
						}
						position++
					}
				l618:
					{
						position620, tokenIndex620 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l621
						}
						position++
						goto l620
					l621:
						position, tokenIndex = position620, tokenIndex620
						if buffer[position] != rune('T') {
							goto l615
						}
						position++
					}
				l620:
					{
						position622, tokenIndex622 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l623
						}
						position++
						goto l622
					l623:
						position, tokenIndex = position622, tokenIndex622
						if buffer[position] != rune('w') {
							goto l624
						}
						position++
						goto l622
					l624:
						position, tokenIndex = position622, tokenIndex622
						if buffer[position] != rune('h') {
							goto l625
						}
						position++
						goto l622
					l625:
						position, tokenIndex = position622, tokenIndex622
						if buffer[position] != rune('b') {
							goto l615
						}
						position++
					}
				l622:
					goto l614
				l615:
					position, tokenIndex = position614, tokenIndex614
					{
						position627, tokenIndex627 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l628
						}
						position++
						goto l627
					l628:
						position, tokenIndex = position627, tokenIndex627
						if buffer[position] != rune('L') {
							goto l626
						}
						position++
					}
				l627:
					{
						position629, tokenIndex629 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l630
						}
						position++
						goto l629
					l630:
						position, tokenIndex = position629, tokenIndex629
						if buffer[position] != rune('S') {
							goto l626
						}
						position++
					}
				l629:
					{
						position631, tokenIndex631 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l632
						}
						position++
						goto l631
					l632:
						position, tokenIndex = position631, tokenIndex631
						if buffer[position] != rune('L') {
							goto l626
						}
						position++
					}
				l631:
					goto l614
				l626:
					position, tokenIndex = position614, tokenIndex614
					{
						position634, tokenIndex634 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l635
						}
						position++
						goto l634
					l635:
						position, tokenIndex = position634, tokenIndex634
						if buffer[position] != rune('L') {
							goto l633
						}
						position++
					}
				l634:
					{
						position636, tokenIndex636 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l637
						}
						position++
						goto l636
					l637:
						position, tokenIndex = position636, tokenIndex636
						if buffer[position] != rune('S') {
							goto l633
						}
						position++
					}
				l636:
					{
						position638, tokenIndex638 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l639
						}
						position++
						goto l638
					l639:
						position, tokenIndex = position638, tokenIndex638
						if buffer[position] != rune('R') {
							goto l633
						}
						position++
					}
				l638:
					goto l614
				l633:
					position, tokenIndex = position614, tokenIndex614
					{
						position641, tokenIndex641 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l642
						}
						position++
						goto l641
					l642:
						position, tokenIndex = position641, tokenIndex641
						if buffer[position] != rune('R') {
							goto l640
						}
						position++
					}
				l641:
					{
						position643, tokenIndex643 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l644
						}
						position++
						goto l643
					l644:
						position, tokenIndex = position643, tokenIndex643
						if buffer[position] != rune('O') {
							goto l640
						}
						position++
					}
				l643:
					{
						position645, tokenIndex645 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l646
						}
						position++
						goto l645
					l646:
						position, tokenIndex = position645, tokenIndex645
						if buffer[position] != rune('R') {
							goto l640
						}
						position++
					}
				l645:
					goto l614
				l640:
					position, tokenIndex = position614, tokenIndex614
					{
						position647, tokenIndex647 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l648
						}
						position++
						goto l647
					l648:
						position, tokenIndex = position647, tokenIndex647
						if buffer[position] != rune('A') {
							goto l612
						}
						position++
					}
				l647:
					{
						position649, tokenIndex649 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l650
						}
						position++
						goto l649
					l650:
						position, tokenIndex = position649, tokenIndex649
						if buffer[position] != rune('S') {
							goto l612
						}
						position++
					}
				l649:
					{
						position651, tokenIndex651 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l652
						}
						position++
						goto l651
					l652:
						position, tokenIndex = position651, tokenIndex651
						if buffer[position] != rune('R') {
							goto l612
						}
						position++
					}
				l651:
				}
			l614:
				{
					position653, tokenIndex653 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l653
					}
					{
						position655, tokenIndex655 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l655
						}
						position++
						goto l656
					l655:
						position, tokenIndex = position655, tokenIndex655
					}
				l656:
					if !_rules[ruleOffset]() {
						goto l653
					}
					goto l654
				l653:
					position, tokenIndex = position653, tokenIndex653
				}
			l654:
				add(ruleARMConstantTweak, position613)
			}
			memoize(42, position612, tokenIndex612, true)
			return true
		l612:
			memoize(42, position612, tokenIndex612, false)
			position, tokenIndex = position612, tokenIndex612
			return false
		},
		/* 43 ARMRegister <- <((('s' / 'S') ('p' / 'P')) / (('x' / 'w' / 'd' / 'q' / 's' / 'h' / 'b') [0-9] [0-9]?) / (('x' / 'X') ('z' / 'Z') ('r' / 'R')) / (('w' / 'W') ('z' / 'Z') ('r' / 'R')) / (('n' / 'N') ('z' / 'Z') ('c' / 'C') ('v' / 'V')) / ARMVectorRegister / ('{' WS? ARMVectorRegister WS? ((',' / '-') WS? ARMVectorRegister)* WS? '}' ('[' [0-9] [0-9]? ']')?))> */
		func() bool {
			if memoized, ok := memoization[memoKey{43, position}]; ok {
				return memoizedResult(memoized)
			}
			position657, tokenIndex657 := position, tokenIndex
			{
				position658 := position
				{
					position659, tokenIndex659 := position, tokenIndex
					{
						position661, tokenIndex661 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l662
						}
						position++
						goto l661
					l662:
						position, tokenIndex = position661, tokenIndex661
						if buffer[position] != rune('S') {
							goto l660
						}
						position++
					}
				l661:
					{
						position663, tokenIndex663 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l664
						}
						position++
						goto l663
					l664:
						position, tokenIndex = position663, tokenIndex663
						if buffer[position] != rune('P') {
							goto l660
						}
						position++
					}
				l663:
					goto l659
				l660:
					position, tokenIndex = position659, tokenIndex659
					{
						position666, tokenIndex666 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l667
						}
						position++
						goto l666
					l667:
						position, tokenIndex = position666, tokenIndex666
						if buffer[position] != rune('w') {
							goto l668
						}
						position++
						goto l666
					l668:
						position, tokenIndex = position666, tokenIndex666
						if buffer[position] != rune('d') {
							goto l669
						}
						position++
						goto l666
					l669:
						position, tokenIndex = position666, tokenIndex666
						if buffer[position] != rune('q') {
							goto l670
						}
						position++
						goto l666
					l670:
						position, tokenIndex = position666, tokenIndex666
						if buffer[position] != rune('s') {
							goto l671
						}
						position++
						goto l666
					l671:
						position, tokenIndex = position666, tokenIndex666
						if buffer[position] != rune('h') {
							goto l672
						}
						position++
						goto l666
					l672:
						position, tokenIndex = position666, tokenIndex666
						if buffer[position] != rune('b') {
							goto l665
						}
						position++
					}
				l666:
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l665
					}
					position++
					{
						position673, tokenIndex673 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l673
						}
						position++
						goto l674
					l673:
						position, tokenIndex = position673, tokenIndex673
					}
				l674:
					goto l659
				l665:
					position, tokenIndex = position659, tokenIndex659
					{
						position676, tokenIndex676 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l677
						}
						position++
						goto l676
					l677:
						position, tokenIndex = position676, tokenIndex676
						if buffer[position] != rune('X') {
							goto l675
						}
						position++
					}
				l676:
					{
						position678, tokenIndex678 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l679
						}
						position++
						goto l678
					l679:
						position, tokenIndex = position678, tokenIndex678
						if buffer[position] != rune('Z') {
							goto l675
						}
						position++
					}
				l678:
					{
						position680, tokenIndex680 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l681
						}
						position++
						goto l680
					l681:
						position, tokenIndex = position680, tokenIndex680
						if buffer[position] != rune('R') {
							goto l675
						}
						position++
					}
				l680:
					goto l659
				l675:
					position, tokenIndex = position659, tokenIndex659
					{
						position683, tokenIndex683 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l684
						}
						position++
						goto l683
					l684:
						position, tokenIndex = position683, tokenIndex683
						if buffer[position] != rune('W') {
							goto l682
						}
						position++
					}
				l683:
					{
						position685, tokenIndex685 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l686
						}
						position++
						goto l685
					l686:
						position, tokenIndex = position685, tokenIndex685
						if buffer[position] != rune('Z') {
							goto l682
						}
						position++
					}
				l685:
					{
						position687, tokenIndex687 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l688
						}
						position++
						goto l687
					l688:
						position, tokenIndex = position687, tokenIndex687
						if buffer[position] != rune('R') {
							goto l682
						}
						position++
					}
				l687:
					goto l659
				l682:
					position, tokenIndex = position659, tokenIndex659
					{
						position690, tokenIndex690 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l691
						}
						position++
						goto l690
					l691:
						position, tokenIndex = position690, tokenIndex690
						if buffer[position] != rune('N') {
							goto l689
						}
						position++
					}
				l690:
					{
						position692, tokenIndex692 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l693
						}
						position++
						goto l692
					l693:
						position, tokenIndex = position692, tokenIndex692
						if buffer[position] != rune('Z') {
							goto l689
						}
						position++
					}
				l692:
					{
						position694, tokenIndex694 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l695
						}
						position++
						goto l694
					l695:
						position, tokenIndex = position694, tokenIndex694
						if buffer[position] != rune('C') {
							goto l689
						}
						position++
					}
				l694:
					{
						position696, tokenIndex696 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l697
						}
						position++
						goto l696
					l697:
						position, tokenIndex = position696, tokenIndex696
						if buffer[position] != rune('V') {
							goto l689
						}
						position++
					}
				l696:
					goto l659
				l689:
					position, tokenIndex = position659, tokenIndex659
					if !_rules[ruleARMVectorRegister]() {
						goto l698
					}
					goto l659
				l698:
					position, tokenIndex = position659, tokenIndex659
					if buffer[position] != rune('{') {
						goto l657
					}
					position++
					{
						position699, tokenIndex699 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l699
						}
						goto l700
					l699:
						position, tokenIndex = position699, tokenIndex699
					}
				l700:
					if !_rules[ruleARMVectorRegister]() {
						goto l657
					}
					{
						position701, tokenIndex701 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l701
						}
						goto l702
					l701:
						position, tokenIndex = position701, tokenIndex701
					}
				l702:
				l703:
					{
						position704, tokenIndex704 := position, tokenIndex
						{
							position705, tokenIndex705 := position, tokenIndex
							if buffer[position] != rune(',') {
								goto l706
							}
							position++
							goto l705
						l706:
							position, tokenIndex = position705, tokenIndex705
							if buffer[position] != rune('-') {
								goto l704
							}
							position++
						}
					l705:
						{
							position707, tokenIndex707 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l707
							}
							goto l708
						l707:
							position, tokenIndex = position707, tokenIndex707
						}
					l708:
						if !_rules[ruleARMVectorRegister]() {
							goto l704
						}
						goto l703
					l704:
						position, tokenIndex = position704, tokenIndex704
					}
					{
						position709, tokenIndex709 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l709
						}
						goto l710
					l709:
						position, tokenIndex = position709, tokenIndex709
					}
				l710:
					if buffer[position] != rune('}') {
						goto l657
					}
					position++
					{
						position711, tokenIndex711 := position, tokenIndex
						if buffer[position] != rune('[') {
							goto l711
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l711
						}
						position++
						{
							position713, tokenIndex713 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l713
							}
							position++
							goto l714
						l713:
							position, tokenIndex = position713, tokenIndex713
						}
					l714:
						if buffer[position] != rune(']') {
							goto l711
						}
						position++
						goto l712
					l711:
						position, tokenIndex = position711, tokenIndex711
					}
				l712:
				}
			l659:
				add(ruleARMRegister, position658)
			}
			memoize(43, position657, tokenIndex657, true)
			return true
		l657:
			memoize(43, position657, tokenIndex657, false)
			position, tokenIndex = position657, tokenIndex657
			return false
		},
		/* 44 ARMVectorRegister <- <(('v' / 'V') [0-9] [0-9]? ('.' [0-9]* ('b' / 's' / 'd' / 'h' / 'q') ('[' [0-9] [0-9]? ']')?)?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{44, position}]; ok {
				return memoizedResult(memoized)
			}
			position715, tokenIndex715 := position, tokenIndex
			{
				position716 := position
				{
					position717, tokenIndex717 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l718
					}
					position++
					goto l717
				l718:
					position, tokenIndex = position717, tokenIndex717
					if buffer[position] != rune('V') {
						goto l715
					}
					position++
				}
			l717:
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l715
				}
				position++
				{
					position719, tokenIndex719 := position, tokenIndex
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l719
					}
					position++
					goto l720
				l719:
					position, tokenIndex = position719, tokenIndex719
				}
			l720:
				{
					position721, tokenIndex721 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l721
					}
					position++
				l723:
					{
						position724, tokenIndex724 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l724
						}
						position++
						goto l723
					l724:
						position, tokenIndex = position724, tokenIndex724
					}
					{
						position725, tokenIndex725 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l726
						}
						position++
						goto l725
					l726:
						position, tokenIndex = position725, tokenIndex725
						if buffer[position] != rune('s') {
							goto l727
						}
						position++
						goto l725
					l727:
						position, tokenIndex = position725, tokenIndex725
						if buffer[position] != rune('d') {
							goto l728
						}
						position++
						goto l725
					l728:
						position, tokenIndex = position725, tokenIndex725
						if buffer[position] != rune('h') {
							goto l729
						}
						position++
						goto l725
					l729:
						position, tokenIndex = position725, tokenIndex725
						if buffer[position] != rune('q') {
							goto l721
						}
						position++
					}
				l725:
					{
						position730, tokenIndex730 := position, tokenIndex
						if buffer[position] != rune('[') {
							goto l730
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l730
						}
						position++
						{
							position732, tokenIndex732 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l732
							}
							position++
							goto l733
						l732:
							position, tokenIndex = position732, tokenIndex732
						}
					l733:
						if buffer[position] != rune(']') {
							goto l730
						}
						position++
						goto l731
					l730:
						position, tokenIndex = position730, tokenIndex730
					}
				l731:
					goto l722
				l721:
					position, tokenIndex = position721, tokenIndex721
				}
			l722:
				add(ruleARMVectorRegister, position716)
			}
			memoize(44, position715, tokenIndex715, true)
			return true
		l715:
			memoize(44, position715, tokenIndex715, false)
			position, tokenIndex = position715, tokenIndex715
			return false
		},
		/* 45 MemoryRef <- <((SymbolRef BaseIndexScale) / SymbolRef / Low12BitsSymbolRef / (Offset* BaseIndexScale) / (SegmentRegister Offset BaseIndexScale) / (SegmentRegister BaseIndexScale) / (SegmentRegister Offset) / ARMBaseIndexScale / BaseIndexScale)> */
		func() bool {
			if memoized, ok := memoization[memoKey{45, position}]; ok {
				return memoizedResult(memoized)
			}
			position734, tokenIndex734 := position, tokenIndex
			{
				position735 := position
				{
					position736, tokenIndex736 := position, tokenIndex
					if !_rules[ruleSymbolRef]() {
						goto l737
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l737
					}
					goto l736
				l737:
					position, tokenIndex = position736, tokenIndex736
					if !_rules[ruleSymbolRef]() {
						goto l738
					}
					goto l736
				l738:
					position, tokenIndex = position736, tokenIndex736
					if !_rules[ruleLow12BitsSymbolRef]() {
						goto l739
					}
					goto l736
				l739:
					position, tokenIndex = position736, tokenIndex736
				l741:
					{
						position742, tokenIndex742 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l742
						}
						goto l741
					l742:
						position, tokenIndex = position742, tokenIndex742
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l740
					}
					goto l736
				l740:
					position, tokenIndex = position736, tokenIndex736
					if !_rules[ruleSegmentRegister]() {
						goto l743
					}
					if !_rules[ruleOffset]() {
						goto l743
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l743
					}
					goto l736
				l743:
					position, tokenIndex = position736, tokenIndex736
					if !_rules[ruleSegmentRegister]() {
						goto l744
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l744
					}
					goto l736
				l744:
					position, tokenIndex = position736, tokenIndex736
					if !_rules[ruleSegmentRegister]() {
						goto l745
					}
					if !_rules[ruleOffset]() {
						goto l745
					}
					goto l736
				l745:
					position, tokenIndex = position736, tokenIndex736
					if !_rules[ruleARMBaseIndexScale]() {
						goto l746
					}
					goto l736
				l746:
					position, tokenIndex = position736, tokenIndex736
					if !_rules[ruleBaseIndexScale]() {
						goto l734
					}
				}
			l736:
				add(ruleMemoryRef, position735)
			}
			memoize(45, position734, tokenIndex734, true)
			return true
		l734:
			memoize(45, position734, tokenIndex734, false)
			position, tokenIndex = position734, tokenIndex734
			return false
		},
		/* 46 SymbolRef <- <((Offset* '+')? (LocalSymbol / SymbolName) Offset* ('@' Section Offset*)?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{46, position}]; ok {
				return memoizedResult(memoized)
			}
			position747, tokenIndex747 := position, tokenIndex
			{
				position748 := position
				{
					position749, tokenIndex749 := position, tokenIndex
				l751:
					{
						position752, tokenIndex752 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l752
						}
						goto l751
					l752:
						position, tokenIndex = position752, tokenIndex752
					}
					if buffer[position] != rune('+') {
						goto l749
					}
					position++
					goto l750
				l749:
					position, tokenIndex = position749, tokenIndex749
				}
			l750:
				{
					position753, tokenIndex753 := position, tokenIndex
					if !_rules[ruleLocalSymbol]() {
						goto l754
					}
					goto l753
				l754:
					position, tokenIndex = position753, tokenIndex753
					if !_rules[ruleSymbolName]() {
						goto l747
					}
				}
			l753:
			l755:
				{
					position756, tokenIndex756 := position, tokenIndex
					if !_rules[ruleOffset]() {
						goto l756
					}
					goto l755
				l756:
					position, tokenIndex = position756, tokenIndex756
				}
				{
					position757, tokenIndex757 := position, tokenIndex
					if buffer[position] != rune('@') {
						goto l757
					}
					position++
					if !_rules[ruleSection]() {
						goto l757
					}
				l759:
					{
						position760, tokenIndex760 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l760
						}
						goto l759
					l760:
						position, tokenIndex = position760, tokenIndex760
					}
					goto l758
				l757:
					position, tokenIndex = position757, tokenIndex757
				}
			l758:
				add(ruleSymbolRef, position748)
			}
			memoize(46, position747, tokenIndex747, true)
			return true
		l747:
			memoize(46, position747, tokenIndex747, false)
			position, tokenIndex = position747, tokenIndex747
			return false
		},
		/* 47 Low12BitsSymbolRef <- <(':' ('l' / 'L') ('o' / 'O') '1' '2' ':' (LocalSymbol / SymbolName) Offset?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{47, position}]; ok {
				return memoizedResult(memoized)
			}
			position761, tokenIndex761 := position, tokenIndex
			{
				position762 := position
				if buffer[position] != rune(':') {
					goto l761
				}
				position++
				{
					position763, tokenIndex763 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l764
					}
					position++
					goto l763
				l764:
					position, tokenIndex = position763, tokenIndex763
					if buffer[position] != rune('L') {
						goto l761
					}
					position++
				}
			l763:
				{
					position765, tokenIndex765 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l766
					}
					position++
					goto l765
				l766:
					position, tokenIndex = position765, tokenIndex765
					if buffer[position] != rune('O') {
						goto l761
					}
					position++
				}
			l765:
				if buffer[position] != rune('1') {
					goto l761
				}
				position++
				if buffer[position] != rune('2') {
					goto l761
				}
				position++
				if buffer[position] != rune(':') {
					goto l761
				}
				position++
				{
					position767, tokenIndex767 := position, tokenIndex
					if !_rules[ruleLocalSymbol]() {
						goto l768
					}
					goto l767
				l768:
					position, tokenIndex = position767, tokenIndex767
					if !_rules[ruleSymbolName]() {
						goto l761
					}
				}
			l767:
				{
					position769, tokenIndex769 := position, tokenIndex
					if !_rules[ruleOffset]() {
						goto l769
					}
					goto l770
				l769:
					position, tokenIndex = position769, tokenIndex769
				}
			l770:
				add(ruleLow12BitsSymbolRef, position762)
			}
			memoize(47, position761, tokenIndex761, true)
			return true
		l761:
			memoize(47, position761, tokenIndex761, false)
			position, tokenIndex = position761, tokenIndex761
			return false
		},
		/* 48 ARMBaseIndexScale <- <('[' ARMRegister (',' WS? (('#'? Offset (('*' [0-9]+) / ('*' '(' [0-9]+ Operator [0-9]+ ')') / ('+' [0-9]+)*)?) / ('#'? ARMGOTLow12) / ('#'? Low12BitsSymbolRef) / ARMRegister) (',' WS? ARMConstantTweak)?)? ']' ARMPostincrement?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{48, position}]; ok {
				return memoizedResult(memoized)
			}
			position771, tokenIndex771 := position, tokenIndex
			{
				position772 := position
				if buffer[position] != rune('[') {
					goto l771
				}
				position++
				if !_rules[ruleARMRegister]() {
					goto l771
				}
				{
					position773, tokenIndex773 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l773
					}
					position++
					{
						position775, tokenIndex775 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l775
						}
						goto l776
					l775:
						position, tokenIndex = position775, tokenIndex775
					}
				l776:
					{
						position777, tokenIndex777 := position, tokenIndex
						{
							position779, tokenIndex779 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l779
							}
							position++
							goto l780
						l779:
							position, tokenIndex = position779, tokenIndex779
						}
					l780:
						if !_rules[ruleOffset]() {
							goto l778
						}
						{
							position781, tokenIndex781 := position, tokenIndex
							{
								position783, tokenIndex783 := position, tokenIndex
								if buffer[position] != rune('*') {
									goto l784
								}
								position++
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l784
								}
								position++
							l785:
								{
									position786, tokenIndex786 := position, tokenIndex
									if c := buffer[position]; c < rune('0') || c > rune('9') {
										goto l786
									}
									position++
									goto l785
								l786:
									position, tokenIndex = position786, tokenIndex786
								}
								goto l783
							l784:
								position, tokenIndex = position783, tokenIndex783
								if buffer[position] != rune('*') {
									goto l787
								}
								position++
								if buffer[position] != rune('(') {
									goto l787
								}
								position++
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l787
								}
								position++
							l788:
								{
									position789, tokenIndex789 := position, tokenIndex
									if c := buffer[position]; c < rune('0') || c > rune('9') {
										goto l789
									}
									position++
									goto l788
								l789:
									position, tokenIndex = position789, tokenIndex789
								}
								if !_rules[ruleOperator]() {
									goto l787
								}
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l787
								}
								position++
							l790:
								{
									position791, tokenIndex791 := position, tokenIndex
									if c := buffer[position]; c < rune('0') || c > rune('9') {
										goto l791
									}
									position++
									goto l790
								l791:
									position, tokenIndex = position791, tokenIndex791
								}
								if buffer[position] != rune(')') {
									goto l787
								}
								position++
								goto l783
							l787:
								position, tokenIndex = position783, tokenIndex783
							l792:
								{
									position793, tokenIndex793 := position, tokenIndex
									if buffer[position] != rune('+') {
										goto l793
									}
									position++
									if c := buffer[position]; c < rune('0') || c > rune('9') {
										goto l793
									}
									position++
								l794:
									{
										position795, tokenIndex795 := position, tokenIndex
										if c := buffer[position]; c < rune('0') || c > rune('9') {
											goto l795
										}
										position++
										goto l794
									l795:
										position, tokenIndex = position795, tokenIndex795
									}
									goto l792
								l793:
									position, tokenIndex = position793, tokenIndex793
								}
							}
						l783:
							goto l782

							position, tokenIndex = position781, tokenIndex781
						}
					l782:
						goto l777
					l778:
						position, tokenIndex = position777, tokenIndex777
						{
							position797, tokenIndex797 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l797
							}
							position++
							goto l798
						l797:
							position, tokenIndex = position797, tokenIndex797
						}
					l798:
						if !_rules[ruleARMGOTLow12]() {
							goto l796
						}
						goto l777
					l796:
						position, tokenIndex = position777, tokenIndex777
						{
							position800, tokenIndex800 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l800
							}
							position++
							goto l801
						l800:
							position, tokenIndex = position800, tokenIndex800
						}
					l801:
						if !_rules[ruleLow12BitsSymbolRef]() {
							goto l799
						}
						goto l777
					l799:
						position, tokenIndex = position777, tokenIndex777
						if !_rules[ruleARMRegister]() {
							goto l773
						}
					}
				l777:
					{
						position802, tokenIndex802 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l802
						}
						position++
						{
							position804, tokenIndex804 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l804
							}
							goto l805
						l804:
							position, tokenIndex = position804, tokenIndex804
						}
					l805:
						if !_rules[ruleARMConstantTweak]() {
							goto l802
						}
						goto l803
					l802:
						position, tokenIndex = position802, tokenIndex802
					}
				l803:
					goto l774
				l773:
					position, tokenIndex = position773, tokenIndex773
				}
			l774:
				if buffer[position] != rune(']') {
					goto l771
				}
				position++
				{
					position806, tokenIndex806 := position, tokenIndex
					if !_rules[ruleARMPostincrement]() {
						goto l806
					}
					goto l807
				l806:
					position, tokenIndex = position806, tokenIndex806
				}
			l807:
				add(ruleARMBaseIndexScale, position772)
			}
			memoize(48, position771, tokenIndex771, true)
			return true
		l771:
			memoize(48, position771, tokenIndex771, false)
			position, tokenIndex = position771, tokenIndex771
			return false
		},
		/* 49 ARMGOTLow12 <- <(':' ('g' / 'G') ('o' / 'O') ('t' / 'T') '_' ('l' / 'L') ('o' / 'O') '1' '2' ':' SymbolName)> */
		func() bool {
			if memoized, ok := memoization[memoKey{49, position}]; ok {
				return memoizedResult(memoized)
			}
			position808, tokenIndex808 := position, tokenIndex
			{
				position809 := position
				if buffer[position] != rune(':') {
					goto l808
				}
				position++
				{
					position810, tokenIndex810 := position, tokenIndex
					if buffer[position] != rune('g') {
						goto l811
					}
					position++
					goto l810
				l811:
					position, tokenIndex = position810, tokenIndex810
					if buffer[position] != rune('G') {
						goto l808
					}
					position++
				}
			l810:
				{
					position812, tokenIndex812 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l813
					}
					position++
					goto l812
				l813:
					position, tokenIndex = position812, tokenIndex812
					if buffer[position] != rune('O') {
						goto l808
					}
					position++
				}
			l812:
				{
					position814, tokenIndex814 := position, tokenIndex
					if buffer[position] != rune('t') {
						goto l815
					}
					position++
					goto l814
				l815:
					position, tokenIndex = position814, tokenIndex814
					if buffer[position] != rune('T') {
						goto l808
					}
					position++
				}
			l814:
				if buffer[position] != rune('_') {
					goto l808
				}
				position++
				{
					position816, tokenIndex816 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l817
					}
					position++
					goto l816
				l817:
					position, tokenIndex = position816, tokenIndex816
					if buffer[position] != rune('L') {
						goto l808
					}
					position++
				}
			l816:
				{
					position818, tokenIndex818 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l819
					}
					position++
					goto l818
				l819:
					position, tokenIndex = position818, tokenIndex818
					if buffer[position] != rune('O') {
						goto l808
					}
					position++
				}
			l818:
				if buffer[position] != rune('1') {
					goto l808
				}
				position++
				if buffer[position] != rune('2') {
					goto l808
				}
				position++
				if buffer[position] != rune(':') {
					goto l808
				}
				position++
				if !_rules[ruleSymbolName]() {
					goto l808
				}
				add(ruleARMGOTLow12, position809)
			}
			memoize(49, position808, tokenIndex808, true)
			return true
		l808:
			memoize(49, position808, tokenIndex808, false)
			position, tokenIndex = position808, tokenIndex808
			return false
		},
		/* 50 ARMPostincrement <- <'!'> */
		func() bool {
			if memoized, ok := memoization[memoKey{50, position}]; ok {
				return memoizedResult(memoized)
			}
			position820, tokenIndex820 := position, tokenIndex
			{
				position821 := position
				if buffer[position] != rune('!') {
					goto l820
				}
				position++
				add(ruleARMPostincrement, position821)
			}
			memoize(50, position820, tokenIndex820, true)
			return true
		l820:
			memoize(50, position820, tokenIndex820, false)
			position, tokenIndex = position820, tokenIndex820
			return false
		},
		/* 51 BaseIndexScale <- <('(' RegisterOrConstant? WS? (',' WS? RegisterOrConstant WS? (',' [0-9]+)?)? ')')> */
		func() bool {
			if memoized, ok := memoization[memoKey{51, position}]; ok {
				return memoizedResult(memoized)
			}
			position822, tokenIndex822 := position, tokenIndex
			{
				position823 := position
				if buffer[position] != rune('(') {
					goto l822
				}
				position++
				{
					position824, tokenIndex824 := position, tokenIndex
					if !_rules[ruleRegisterOrConstant]() {
						goto l824
					}
					goto l825
				l824:
					position, tokenIndex = position824, tokenIndex824
				}
			l825:
				{
					position826, tokenIndex826 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l826
					}
					goto l827
				l826:
					position, tokenIndex = position826, tokenIndex826
				}
			l827:
				{
					position828, tokenIndex828 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l828
					}
					position++
					{
						position830, tokenIndex830 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l830
						}
						goto l831
					l830:
						position, tokenIndex = position830, tokenIndex830
					}
				l831:
					if !_rules[ruleRegisterOrConstant]() {
						goto l828
					}
					{
						position832, tokenIndex832 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l832
						}
						goto l833
					l832:
						position, tokenIndex = position832, tokenIndex832
					}
				l833:
					{
						position834, tokenIndex834 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l834
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l834
						}
						position++
					l836:
						{
							position837, tokenIndex837 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l837
							}
							position++
							goto l836
						l837:
							position, tokenIndex = position837, tokenIndex837
						}
						goto l835
					l834:
						position, tokenIndex = position834, tokenIndex834
					}
				l835:
					goto l829
				l828:
					position, tokenIndex = position828, tokenIndex828
				}
			l829:
				if buffer[position] != rune(')') {
					goto l822
				}
				position++
				add(ruleBaseIndexScale, position823)
			}
			memoize(51, position822, tokenIndex822, true)
			return true
		l822:
			memoize(51, position822, tokenIndex822, false)
			position, tokenIndex = position822, tokenIndex822
			return false
		},
		/* 52 Operator <- <('+' / '-')> */
		func() bool {
			if memoized, ok := memoization[memoKey{52, position}]; ok {
				return memoizedResult(memoized)
			}
			position838, tokenIndex838 := position, tokenIndex
			{
				position839 := position
				{
					position840, tokenIndex840 := position, tokenIndex
					if buffer[position] != rune('+') {
						goto l841
					}
					position++
					goto l840
				l841:
					position, tokenIndex = position840, tokenIndex840
					if buffer[position] != rune('-') {
						goto l838
					}
					position++
				}
			l840:
				add(ruleOperator, position839)
			}
			memoize(52, position838, tokenIndex838, true)
			return true
		l838:
			memoize(52, position838, tokenIndex838, false)
			position, tokenIndex = position838, tokenIndex838
			return false
		},
		/* 53 OffsetOperator <- <('+' / '-' / '*')> */
		func() bool {
			if memoized, ok := memoization[memoKey{53, position}]; ok {
				return memoizedResult(memoized)
			}
			position842, tokenIndex842 := position, tokenIndex
			{
				position843 := position
				{
					position844, tokenIndex844 := position, tokenIndex
					if buffer[position] != rune('+') {
						goto l845
					}
					position++
					goto l844
				l845:
					position, tokenIndex = position844, tokenIndex844
					if buffer[position] != rune('-') {
						goto l846
					}
					position++
					goto l844
				l846:
					position, tokenIndex = position844, tokenIndex844
					if buffer[position] != rune('*') {
						goto l842
					}
					position++
				}
			l844:
				add(ruleOffsetOperator, position843)
			}
			memoize(53, position842, tokenIndex842, true)
			return true
		l842:
			memoize(53, position842, tokenIndex842, false)
			position, tokenIndex = position842, tokenIndex842
			return false
		},
		/* 54 Offset <- <('+'? '-'? (('0' ('b' / 'B') ('0' / '1')+) / ('0' ('x' / 'X') ([0-9] / [0-9] / ([a-f] / [A-F]))+) / ((([0-9]+ WS OffsetOperator WS? [0-9]+) / ([0-9]+ (OffsetOperator '(' [0-9]+ OffsetOperator [0-9]+ ')')?) / ([0-9]+ (OffsetOperator [0-9]+ OffsetOperator [0-9]+)?) / ([0-9]+ (OffsetOperator [0-9]+)?) / ('(' [0-9]+ WS? OffsetOperator WS? [0-9]+ ')' OffsetOperator [0-9]+ OffsetOperator [0-9]+) / ('(' [0-9]+ WS? OffsetOperator WS? [0-9]+ ')' OffsetOperator [0-9]+ !'x') / ('(' [0-9]+ WS? OffsetOperator WS? [0-9]+ ')') / ('(' [0-9]+ WS? OffsetOperator WS? [0-9]+ WS? OffsetOperator WS? [0-9]+ ')')) !([a-z] / [A-Z]))))> */
		func() bool {
			if memoized, ok := memoization[memoKey{54, position}]; ok {
				return memoizedResult(memoized)
			}
			position847, tokenIndex847 := position, tokenIndex
			{
				position848 := position
				{
					position849, tokenIndex849 := position, tokenIndex
					if buffer[position] != rune('+') {
						goto l849
					}
					position++
					goto l850
				l849:
					position, tokenIndex = position849, tokenIndex849
				}
			l850:
				{
					position851, tokenIndex851 := position, tokenIndex
					if buffer[position] != rune('-') {
						goto l851
					}
					position++
					goto l852
				l851:
					position, tokenIndex = position851, tokenIndex851
				}
			l852:
				{
					position853, tokenIndex853 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l854
					}
					position++
					{
						position855, tokenIndex855 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l856
						}
						position++
						goto l855
					l856:
						position, tokenIndex = position855, tokenIndex855
						if buffer[position] != rune('B') {
							goto l854
						}
						position++
					}
				l855:
					{
						position859, tokenIndex859 := position, tokenIndex
						if buffer[position] != rune('0') {
							goto l860
						}
						position++
						goto l859
					l860:
						position, tokenIndex = position859, tokenIndex859
						if buffer[position] != rune('1') {
							goto l854
						}
						position++
					}
				l859:
				l857:
					{
						position858, tokenIndex858 := position, tokenIndex
						{
							position861, tokenIndex861 := position, tokenIndex
							if buffer[position] != rune('0') {
								goto l862
							}
							position++
							goto l861
						l862:
							position, tokenIndex = position861, tokenIndex861
							if buffer[position] != rune('1') {
								goto l858
							}
							position++
						}
					l861:
						goto l857
					l858:
						position, tokenIndex = position858, tokenIndex858
					}
					goto l853
				l854:
					position, tokenIndex = position853, tokenIndex853
					if buffer[position] != rune('0') {
						goto l863
					}
					position++
					{
						position864, tokenIndex864 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l865
						}
						position++
						goto l864
					l865:
						position, tokenIndex = position864, tokenIndex864
						if buffer[position] != rune('X') {
							goto l863
						}
						position++
					}
				l864:
					{
						position868, tokenIndex868 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l869
						}
						position++
						goto l868
					l869:
						position, tokenIndex = position868, tokenIndex868
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l870
						}
						position++
						goto l868
					l870:
						position, tokenIndex = position868, tokenIndex868
						{
							position871, tokenIndex871 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('f') {
								goto l872
							}
							position++
							goto l871
						l872:
							position, tokenIndex = position871, tokenIndex871
							if c := buffer[position]; c < rune('A') || c > rune('F') {
								goto l863
							}
							position++
						}
					l871:
					}
				l868:
				l866:
					{
						position867, tokenIndex867 := position, tokenIndex
						{
							position873, tokenIndex873 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l874
							}
							position++
							goto l873
						l874:
							position, tokenIndex = position873, tokenIndex873
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l875
							}
							position++
							goto l873
						l875:
							position, tokenIndex = position873, tokenIndex873
							{
								position876, tokenIndex876 := position, tokenIndex
								if c := buffer[position]; c < rune('a') || c > rune('f') {
									goto l877
								}
								position++
								goto l876
							l877:
								position, tokenIndex = position876, tokenIndex876
								if c := buffer[position]; c < rune('A') || c > rune('F') {
									goto l867
								}
								position++
							}
						l876:
						}
					l873:
						goto l866
					l867:
						position, tokenIndex = position867, tokenIndex867
					}
					goto l853
				l863:
					position, tokenIndex = position853, tokenIndex853
					{
						position878, tokenIndex878 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l879
						}
						position++
					l880:
						{
							position881, tokenIndex881 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l881
							}
							position++
							goto l880
						l881:
							position, tokenIndex = position881, tokenIndex881
						}
						if !_rules[ruleWS]() {
							goto l879
						}
						if !_rules[ruleOffsetOperator]() {
							goto l879
						}
						{
							position882, tokenIndex882 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l882
							}
							goto l883
						l882:
							position, tokenIndex = position882, tokenIndex882
						}
					l883:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l879
						}
						position++
					l884:
						{
							position885, tokenIndex885 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l885
							}
							position++
							goto l884
						l885:
							position, tokenIndex = position885, tokenIndex885
						}
						goto l878
					l879:
						position, tokenIndex = position878, tokenIndex878
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l886
						}
						position++
					l887:
						{
							position888, tokenIndex888 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l888
							}
							position++
							goto l887
						l888:
							position, tokenIndex = position888, tokenIndex888
						}
						{
							position889, tokenIndex889 := position, tokenIndex
							if !_rules[ruleOffsetOperator]() {
								goto l889
							}
							if buffer[position] != rune('(') {
								goto l889
							}
							position++
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l889
							}
							position++
						l891:
							{
								position892, tokenIndex892 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l892
								}
								position++
								goto l891
							l892:
								position, tokenIndex = position892, tokenIndex892
							}
							if !_rules[ruleOffsetOperator]() {
								goto l889
							}
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l889
							}
							position++
						l893:
							{
								position894, tokenIndex894 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l894
								}
								position++
								goto l893
							l894:
								position, tokenIndex = position894, tokenIndex894
							}
							if buffer[position] != rune(')') {
								goto l889
							}
							position++
							goto l890
						l889:
							position, tokenIndex = position889, tokenIndex889
						}
					l890:
						goto l878
					l886:
						position, tokenIndex = position878, tokenIndex878
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l895
						}
						position++
					l896:
						{
							position897, tokenIndex897 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l897
							}
							position++
							goto l896
						l897:
							position, tokenIndex = position897, tokenIndex897
						}
						{
							position898, tokenIndex898 := position, tokenIndex
							if !_rules[ruleOffsetOperator]() {
								goto l898
							}
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l898
							}
							position++
						l900:
							{
								position901, tokenIndex901 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l901
								}
								position++
								goto l900
							l901:
								position, tokenIndex = position901, tokenIndex901
							}
							if !_rules[ruleOffsetOperator]() {
								goto l898
							}
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l898
							}
							position++
						l902:
							{
								position903, tokenIndex903 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l903
								}
								position++
								goto l902
							l903:
								position, tokenIndex = position903, tokenIndex903
							}
							goto l899
						l898:
							position, tokenIndex = position898, tokenIndex898
						}
					l899:
						goto l878
					l895:
						position, tokenIndex = position878, tokenIndex878
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l904
						}
						position++
					l905:
						{
							position906, tokenIndex906 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l906
							}
							position++
							goto l905
						l906:
							position, tokenIndex = position906, tokenIndex906
						}
						{
							position907, tokenIndex907 := position, tokenIndex
							if !_rules[ruleOffsetOperator]() {
								goto l907
							}
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l907
							}
							position++
						l909:
							{
								position910, tokenIndex910 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l910
								}
								position++
								goto l909
							l910:
								position, tokenIndex = position910, tokenIndex910
							}
							goto l908
						l907:
							position, tokenIndex = position907, tokenIndex907
						}
					l908:
						goto l878
					l904:
						position, tokenIndex = position878, tokenIndex878
						if buffer[position] != rune('(') {
							goto l911
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l911
						}
						position++
					l912:
						{
							position913, tokenIndex913 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l913
							}
							position++
							goto l912
						l913:
							position, tokenIndex = position913, tokenIndex913
						}
						{
							position914, tokenIndex914 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l914
							}
							goto l915
						l914:
							position, tokenIndex = position914, tokenIndex914
						}
					l915:
						if !_rules[ruleOffsetOperator]() {
							goto l911
						}
						{
							position916, tokenIndex916 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l916
							}
							goto l917
						l916:
							position, tokenIndex = position916, tokenIndex916
						}
					l917:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l911
						}
						position++
					l918:
						{
							position919, tokenIndex919 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l919
							}
							position++
							goto l918
						l919:
							position, tokenIndex = position919, tokenIndex919
						}
						if buffer[position] != rune(')') {
							goto l911
						}
						position++
						if !_rules[ruleOffsetOperator]() {
							goto l911
						}
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l911
						}
						position++
					l920:
						{
							position921, tokenIndex921 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l921
							}
							position++
							goto l920
						l921:
							position, tokenIndex = position921, tokenIndex921
						}
						if !_rules[ruleOffsetOperator]() {
							goto l911
						}
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l911
						}
						position++
					l922:
						{
							position923, tokenIndex923 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l923
							}
							position++
							goto l922
						l923:
							position, tokenIndex = position923, tokenIndex923
						}
						goto l878
					l911:
						position, tokenIndex = position878, tokenIndex878
						if buffer[position] != rune('(') {
							goto l924
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l924
						}
						position++
					l925:
						{
							position926, tokenIndex926 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l926
							}
							position++
							goto l925
						l926:
							position, tokenIndex = position926, tokenIndex926
						}
						{
							position927, tokenIndex927 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l927
							}
							goto l928
						l927:
							position, tokenIndex = position927, tokenIndex927
						}
					l928:
						if !_rules[ruleOffsetOperator]() {
							goto l924
						}
						{
							position929, tokenIndex929 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l929
							}
							goto l930
						l929:
							position, tokenIndex = position929, tokenIndex929
						}
					l930:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l924
						}
						position++
					l931:
						{
							position932, tokenIndex932 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l932
							}
							position++
							goto l931
						l932:
							position, tokenIndex = position932, tokenIndex932
						}
						if buffer[position] != rune(')') {
							goto l924
						}
						position++
						if !_rules[ruleOffsetOperator]() {
							goto l924
						}
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l924
						}
						position++
					l933:
						{
							position934, tokenIndex934 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l934
							}
							position++
							goto l933
						l934:
							position, tokenIndex = position934, tokenIndex934
						}
						{
							position935, tokenIndex935 := position, tokenIndex
							if buffer[position] != rune('x') {
								goto l935
							}
							position++
							goto l924
						l935:
							position, tokenIndex = position935, tokenIndex935
						}
						goto l878
					l924:
						position, tokenIndex = position878, tokenIndex878
						if buffer[position] != rune('(') {
							goto l936
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l936
						}
						position++
					l937:
						{
							position938, tokenIndex938 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l938
							}
							position++
							goto l937
						l938:
							position, tokenIndex = position938, tokenIndex938
						}
						{
							position939, tokenIndex939 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l939
							}
							goto l940
						l939:
							position, tokenIndex = position939, tokenIndex939
						}
					l940:
						if !_rules[ruleOffsetOperator]() {
							goto l936
						}
						{
							position941, tokenIndex941 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l941
							}
							goto l942
						l941:
							position, tokenIndex = position941, tokenIndex941
						}
					l942:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l936
						}
						position++
					l943:
						{
							position944, tokenIndex944 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l944
							}
							position++
							goto l943
						l944:
							position, tokenIndex = position944, tokenIndex944
						}
						if buffer[position] != rune(')') {
							goto l936
						}
						position++
						goto l878
					l936:
						position, tokenIndex = position878, tokenIndex878
						if buffer[position] != rune('(') {
							goto l847
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l847
						}
						position++
					l945:
						{
							position946, tokenIndex946 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l946
							}
							position++
							goto l945
						l946:
							position, tokenIndex = position946, tokenIndex946
						}
						{
							position947, tokenIndex947 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l947
							}
							goto l948
						l947:
							position, tokenIndex = position947, tokenIndex947
						}
					l948:
						if !_rules[ruleOffsetOperator]() {
							goto l847
						}
						{
							position949, tokenIndex949 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l949
							}
							goto l950
						l949:
							position, tokenIndex = position949, tokenIndex949
						}
					l950:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l847
						}
						position++
					l951:
						{
							position952, tokenIndex952 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l952
							}
							position++
							goto l951
						l952:
							position, tokenIndex = position952, tokenIndex952
						}
						{
							position953, tokenIndex953 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l953
							}
							goto l954
						l953:
							position, tokenIndex = position953, tokenIndex953
						}
					l954:
						if !_rules[ruleOffsetOperator]() {
							goto l847
						}
						{
							position955, tokenIndex955 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l955
							}
							goto l956
						l955:
							position, tokenIndex = position955, tokenIndex955
						}
					l956:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l847
						}
						position++
					l957:
						{
							position958, tokenIndex958 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l958
							}
							position++
							goto l957
						l958:
							position, tokenIndex = position958, tokenIndex958
						}
						if buffer[position] != rune(')') {
							goto l847
						}
						position++
					}
				l878:
					{
						position959, tokenIndex959 := position, tokenIndex
						{
							position960, tokenIndex960 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l961
							}
							position++
							goto l960
						l961:
							position, tokenIndex = position960, tokenIndex960
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l959
							}
							position++
						}
					l960:
						goto l847
					l959:
						position, tokenIndex = position959, tokenIndex959
					}
				}
			l853:
				add(ruleOffset, position848)
			}
			memoize(54, position847, tokenIndex847, true)
			return true
		l847:
			memoize(54, position847, tokenIndex847, false)
			position, tokenIndex = position847, tokenIndex847
			return false
		},
		/* 55 Section <- <([a-z] / [A-Z] / '@')+> */
		func() bool {
			if memoized, ok := memoization[memoKey{55, position}]; ok {
				return memoizedResult(memoized)
			}
			position962, tokenIndex962 := position, tokenIndex
			{
				position963 := position
				{
					position966, tokenIndex966 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l967
					}
					position++
					goto l966
				l967:
					position, tokenIndex = position966, tokenIndex966
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l968
					}
					position++
					goto l966
				l968:
					position, tokenIndex = position966, tokenIndex966
					if buffer[position] != rune('@') {
						goto l962
					}
					position++
				}
			l966:
			l964:
				{
					position965, tokenIndex965 := position, tokenIndex
					{
						position969, tokenIndex969 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l970
						}
						position++
						goto l969
					l970:
						position, tokenIndex = position969, tokenIndex969
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l971
						}
						position++
						goto l969
					l971:
						position, tokenIndex = position969, tokenIndex969
						if buffer[position] != rune('@') {
							goto l965
						}
						position++
					}
				l969:
					goto l964
				l965:
					position, tokenIndex = position965, tokenIndex965
				}
				add(ruleSection, position963)
			}
			memoize(55, position962, tokenIndex962, true)
			return true
		l962:
			memoize(55, position962, tokenIndex962, false)
			position, tokenIndex = position962, tokenIndex962
			return false
		},
		/* 56 SegmentRegister <- <('%' ([c-g] / 's') ('s' ':'))> */
		func() bool {
			if memoized, ok := memoization[memoKey{56, position}]; ok {
				return memoizedResult(memoized)
			}
			position972, tokenIndex972 := position, tokenIndex
			{
				position973 := position
				if buffer[position] != rune('%') {
					goto l972
				}
				position++
				{
					position974, tokenIndex974 := position, tokenIndex
					if c := buffer[position]; c < rune('c') || c > rune('g') {
						goto l975
					}
					position++
					goto l974
				l975:
					position, tokenIndex = position974, tokenIndex974
					if buffer[position] != rune('s') {
						goto l972
					}
					position++
				}
			l974:
				if buffer[position] != rune('s') {
					goto l972
				}
				position++
				if buffer[position] != rune(':') {
					goto l972
				}
				position++
				add(ruleSegmentRegister, position973)
			}
			memoize(56, position972, tokenIndex972, true)
			return true
		l972:
			memoize(56, position972, tokenIndex972, false)
			position, tokenIndex = position972, tokenIndex972
			return false
		},
	}
	p.rules = _rules
	return nil
}
